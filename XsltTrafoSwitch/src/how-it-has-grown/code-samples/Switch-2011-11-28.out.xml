<?xml version="1.0" encoding="UTF-8"?>
"Number"|"Name"|"Description"|"Type"|"Depend on"|"Roadmap"|"Epic Story"|"Feature"|"Story"|"Product Name"|"Schedule"|"Release"|"Sprint"|"Task"|"Defect"|"Story Points Dev"|"Story Points QA"|"Story Points Total"|"Start Date"|"End Date"|"Status"|"Task Status"
"#15"|"R1"|""|"Release"|""|"no"|""|""|""|""|"yes"|""|""|""|""|""|""|""|"2011-09-12 00:00:00.0"|"2012-02-08 00:00:00.0"|""|""
"#16"|"Generated Sprint-16"|""|"Sprint"|""|"no"|""|""|""|""|"yes"|"#15"|""|""|""|""|""|""|"2011-09-12 00:00:00.0"|"2011-09-25 00:00:00.0"|""|""
"#10"|"SwitchClient module "|"h2. Narrative


As a  I can  to As a (prepress) manager on a tight budget I only want to pay for features I
actually use, i.e. SwitchClient, in order to get the most out of my investment.

*Conversation*
The communication elements (Submit point, Checkpoint and Checkpoint via mail)
should be licensed separately from Switch. Meaning that only when I use a valid
key, these elements become available in the Communication section of the
elements pane.
Next to the elements also the User panel and the Client Activity and Client
Connection pane on the Statistics panel should become available whenever
correctly licensed.
The key can either be a permanent or trial key. Both keys have the same result,
however a trial key is time bombed so when it expires, functionality cannot be
used anymore. Same thing when you deactivate a key.

*Acceptance criteria*
Make the Submit point, Checkpoint and Checkpoint via mail behave like the
Database connect tool in Switch 10 update1. Meaning that only when they are
licensed (separately from PowerSwitch), they can be used. Note that the
Database module only includes 1 tool and the Client module includes 3 elements.
Make sure the User panel appears according to the licensing status
Make sure the Client Activity and Client Connection pane on the Statistics
panel appear according to the licensing status.
Note that nothing changes to the “5 license included” policy for PowerSwitch so
if a customer has licensed the SwitchClient module then he or she still gets 5
licenses, knowing that this number of licenses can be expanded with additional
Client licensing.

h2. Related Stories


* #0


h2. Tasks


{{table query: SELECT Number, Name, Owner, 'Hours Remaining', 'Task Status' WHERE Type = Task and Story = THIS CARD}} 


h2. Defects


{{table query: SELECT Number, Name, Owner, 'Defect Status' WHERE Type = Defect and Story = THIS CARD}}"|"Story"|""|"yes"|""|""|""|"Switch"|"yes"|"#15"|"#16"|""|""|""|""|""|""|""|"Accepted"|""
"#54"|"Hide UI elements"|"Description:User panel and the Client Activity and Client Connection pane on the Statistics panel should become available whenever
correctly licensed. Notes:Next to the elements also the User panel and the Client Activity and Client
Connection pane on the Statistics panel should become available whenever
correctly licensed.
The key can either be a permanent or trial key. Both keys have the same result,
however a trial key is time bombed so when it expires, functionality cannot be
used anymore. Same thing when you deactivate "|"Task"|""|"no"|""|""|"#10"|"Switch"|"yes"|"#15"|"#16"|""|""|""|""|""|""|""|""|"Done"
"#53"|"Add ModuleID to tools"|"Description:Add ModuleID to 'Submit point', 'Checkpoint' and 'Checkpoint via mail' Notes:The communication elements (Submit point, Checkpoint and Checkpoint via mail)
should be licensed separately from Switch. Meaning that only when I use a valid
key, these elements become available in the Communication section of the
elements pane."|"Task"|""|"no"|""|""|"#10"|"Switch"|"yes"|"#15"|"#16"|""|""|""|""|""|""|""|""|"Done"
"#14"|"Configurator module"|"h2. Narrative


As a  I can  to As a (prepress) manager on a tight budget I only want to pay for features I
actually use, i.e. Configurators, in order to get the most out of my
investment.

*Conversation*
The configurators should be licensed separately from Switch. Meaning that only
when I use a valid key, the configurators (i.e. elements in Configurator
section of the elements pane) become available.
The key can either be a permanent or trial key. Both keys have the same result,
however a trial key is time bombed so when it expires, functionality cannot be
used anymore. Same thing when you deactivate a key.

SwitchScripter (Configurator SDK) always puts the configuration module ID in the scripted plug-in. Configurators created with older version of SDK don't have such ID. They should however also be loaded correctly in Switch 11. 
For our own tools we'll put the ID in the tool manually. SwitchScritper should not overwrite ID's that were added manually.

*Acceptance criteria*
Make the Configurators behave like the Database connect tool in Switch 10
update1. Meaning that only when they are licensed (separately from
PowerSwitch), they can be used. Note that the Database module only includes 1
tool and the Configurator module includes all elements from the Configurator
section in the elements pane.

h2. Related Stories


* #0


h2. Tasks


{{table query: SELECT Number, Name, Owner, 'Hours Remaining', 'Task Status' WHERE Type = Task and Story = THIS CARD}} 


h2. Defects


{{table query: SELECT Number, Name, Owner, 'Defect Status' WHERE Type = Defect and Story = THIS CARD}}"|"Story"|""|"yes"|""|""|""|"Switch"|"yes"|"#15"|"#16"|""|""|""|""|""|""|""|"Accepted"|""
"#59"|"Prevent flow from starting when not licensed"|"Description:Prevent flow from starting in case used configurator is not licensed Notes:"|"Task"|""|"no"|""|""|"#14"|"Switch"|"yes"|"#15"|"#16"|""|""|""|""|""|""|""|""|"Done"
"#56"|"Add Module ID to congurators"|"Description:Add module ID to all configurators from Processing category Notes:"|"Task"|""|"no"|""|""|"#14"|"Switch"|"yes"|"#15"|"#16"|""|""|""|""|""|""|""|""|"Done"
"#57"|"Mechanism for checking module license"|"Description:Make common mechanism for checking module license Notes:"|"Task"|""|"no"|""|""|"#14"|"Switch"|"yes"|"#15"|"#16"|""|""|""|""|""|""|""|""|"Done"
"#55"|"Update Scripter to support Module ID"|"Description: Notes:"|"Task"|""|"no"|""|""|"#14"|"Switch"|"yes"|"#15"|"#16"|""|""|""|""|""|""|""|""|"Done"
"#16"|"Switch (basic) version features"|"h2. Narrative


As a  I can  to As a (prepress) manager on a tight budget I only want to pay for features I
actually use, i.e. Switch most basic features (+- LightSwitch), in order to get the most out of my investment.*Conversation*
Enfocus PowerSwitch contains all LightSwitch functionality but includes the following changes:
•“Log job info” element is part of the Tools category in the elements pane (instead of the Metadata category. 
Note that all 3 possible schemes are supported, this is also the case for the Sort job tool 
•“XSLT transform” element is part of the Tools category in the elements pane (instead of the Metadata category.
•“Split PDF in pages” is renamed to “Split PDF” and is available in the basic version of Switch.
•“Merge PDF pages” is renamed to “Merge PDF” and is available in the basic version of Switch.

Note: advanced performance tuning features becomes part of Switch (basic)

Note that datasets are also supported in this basic version.
E.g. ftp send can create a dataset on the data+log outgoing connection (just like in LightSwitch). If customer has Configurator module then PitStop Server configurator can create dataset with a report and if the customer also has the SwitchClient module the he can see this report in SwitchClient.

Note that private data is also supported for some tools (e.g. group and ungroup) and that the job.PrivatData variable remains part of Switch (basic) (just like in LightSwitch) 

*Acceptance criteria*
The LightSwitch tools + those mentioned above are loaded correctly

h2. Related Stories


* #0


h2. Tasks


{{table query: SELECT Number, Name, Owner, 'Hours Remaining', 'Task Status' WHERE Type = Task and Story = THIS CARD}} 


h2. Defects


{{table query: SELECT Number, Name, Owner, 'Defect Status' WHERE Type = Defect and Story = THIS CARD}}"|"Story"|""|"yes"|""|""|""|"Switch"|"yes"|"#15"|"#16"|""|""|""|""|""|""|""|"Accepted"|""
"#52"|"Test dataset availability"|"Description:Make sure that datasets and private data are available in Switch basic Notes:Note that datasets are also supported in this basic version.
E.g. ftp send can create a dataset on the data+log outgoing connection (just like in LightSwitch). If customer has Configurator module then PitStop Server configurator can create dataset with a report and if the customer also has the SwitchClient module the he can see this report in SwitchClient.

Note that private data is also supported for some tools (e.g. group and ungroup) and that the job.PrivatData variable remains part of Switch (basic) (just like in LightSwitch) 
"|"Task"|""|"no"|""|""|"#16"|"Switch"|"yes"|"#15"|"#16"|""|""|""|""|""|""|""|""|"Done"
"#51"|"Rename tools"|"Description:Rename 'Split PDF in pages' to 'Split PDF'; and rename 'Merge PDF pages' to 'Merge PDF'. Notes:•“Split PDF in pages” is renamed to “Split PDF” and is available in the basic version of Switch.
•“Merge PDF pages” is renamed to “Merge PDF” and is available in the basic version of Switch."|"Task"|""|"no"|""|""|"#16"|"Switch"|"yes"|"#15"|"#16"|""|""|""|""|""|""|""|""|"Done"
"#50"|"Move tools"|"Description:Move 'Log job info' and 'XSLT transform' into Tools category. Notes:Enfocus PowerSwitch contains all LightSwitch functionality but includes the following changes:
•“Log job info” element is part of the Tools category in the elements pane (instead of the Metadata category. 
Note that all 3 possible schemes are supported, this is also the case for the Sort job tool 
•“XSLT transform” element is part of the Tools category in the elements pane (instead of the Metadata category."|"Task"|""|"no"|""|""|"#16"|"Switch"|"yes"|"#15"|"#16"|""|""|""|""|""|""|""|""|"Done"
"#58"|"Add Module ID"|"Description:Add Switch Basic module id to 'build-in' configurators Notes:It seems we shouldn't add any module id to basic tools because in this case we will not see them in GUI till Switch will be licensed. So here I will just check that any 3rd-party configurator without module ID isn't loaded in GUI."|"Task"|""|"no"|""|""|"#16"|"Switch"|"yes"|"#15"|"#16"|""|""|""|""|""|""|""|""|"Done"
"#13"|"Metadata module"|"h2. Narrative


As a  I can  to As a (prepress) manager on a tight budget I only want to pay for features I
actually use, i.e. Metadata tools and access to the metadata variables and
possibility to gather content for a SwitchClient dropdown list straight from an
XML based dataset, in order to get the most out of my investment.

*Conversation*
•The metadata elements (XML, JDF, XMP and opaque pickup, XMP inject, export
metadata)
•The metadata variables 
•And access to XML based datasets when defining dropdown list as metadata
fields on Submit and Checkpoints, 
Should be licensed separately from Switch. Meaning that only when I use a valid
key, those flow elements become available in the elements pane, the metadata
group becomes available in the variables panel (i.e. define single/ multi line
or condition with variables dialog) and  “Define values from dataset” becomes
available as data value for dropdown list.

The key can either be a permanent or trial key. Both keys have the same result,
however a trial key is time bombed so when it expires, functionality cannot be
used anymore. Same thing when you deactivate a key.

Note about datasets:

*Acceptance criteria*
Make those metadata elements and features behave like the Database connect tool
and the database variables in Switch 10 update1. Meaning that only when they
are licensed (separately from PowerSwitch), they appear in the metadata
category and so can be used.
Note that XSLT transform and log job info are not included in this module so
they do not appear/disappear based on license status of this module.

h2. Related Stories


* #0


h2. Tasks


{{table query: SELECT Number, Name, Owner, 'Hours Remaining', 'Task Status' WHERE Type = Task and Story = THIS CARD}} 


h2. Defects


{{table query: SELECT Number, Name, Owner, 'Defect Status' WHERE Type = Defect and Story = THIS CARD}}"|"Story"|""|"yes"|""|""|""|"Switch"|"yes"|"#15"|"#16"|""|""|""|""|""|""|""|"Accepted"|""
"#62"|"Disable dataset dropdown list from metadata fields"|"Description:And access to XML based datasets when defining dropdown list as metadata
fields on Submit and Checkpoints Notes:"|"Task"|""|"no"|""|""|"#13"|"Switch"|"yes"|"#15"|"#16"|""|""|""|""|""|""|""|""|"Done"
"#60"|"Add Module ID to configurators"|"Description:XML, JDF, XMP and opaque pickup, XMP inject, export metadata Notes:Note that XSLT transform and log job info are not included in this module so
they do not appear/disappear based on license status of this module"|"Task"|""|"no"|""|""|"#13"|"Switch"|"yes"|"#15"|"#16"|""|""|""|""|""|""|""|""|"Done"
"#61"|"Switch off metadata variables "|"Description:Switch off metadata variables in case Metadata module is not licensed Notes:"|"Task"|""|"no"|""|""|"#13"|"Switch"|"yes"|"#15"|"#16"|""|""|""|""|""|""|""|""|"Done"
"#17"|"Generated Sprint-17"|""|"Sprint"|""|"no"|""|""|""|""|"yes"|"#15"|""|""|""|""|""|""|"2011-09-26 00:00:00.0"|"2011-10-09 00:00:00.0"|""|""
"#52"|"Bugfixes customer bugs"|"h2. Narrative


As a  I can  to These are 3  bugs reported by customers against previous versions of Switch:

- BZ 4331: 'Hold' on connection doesn't always work

- BZ 6309 - Switch 10 can't upload to FTP user root folder 

- BZ 6329 - Mail receive can't handle special character like /

h2. Related Stories


* #0


h2. Tasks


{{table query: SELECT Number, Name, Owner, 'Hours Remaining', 'Task Status' WHERE Type = Task and Story = THIS CARD}} 


h2. Defects


{{table query: SELECT Number, Name, Owner, 'Defect Status' WHERE Type = Defect and Story = THIS CARD}}"|"Story"|""|"yes"|""|""|""|"Switch"|"yes"|"#15"|"#17"|""|""|""|""|""|""|""|"Accepted"|""
"#95"|"BZ 6309 - Switch 10 can't upload to FTP user root folder"|"Description: Notes:"|"Task"|""|"no"|""|""|"#52"|"Switch"|"yes"|"#15"|"#17"|""|""|""|""|""|""|""|""|"Done"
"#96"|"BZ 6329 - Mail receive can't handle special character like /"|"Description: Notes:"|"Task"|""|"no"|""|""|"#52"|"Switch"|"yes"|"#15"|"#17"|""|""|""|""|""|""|""|""|"Done"
"#94"|"BZ 4331: 'Hold' on connection doesn't always work"|"Description: Notes:"|"Task"|""|"no"|""|""|"#52"|"Switch"|"yes"|"#15"|"#17"|""|""|""|""|""|""|""|""|"Done"
"#12"|"Database module"|"h2. Narrative


As a  I can  to As a (prepress) manager on a tight budget I only want to pay for features I
actually use, i.e. Database tool, access to the database variables and
possibility to gather content for a SwitchClient dropdown list straight from a
database, in order to get the most out of my investment.

*Conversation*
•The Database connect element
•The database variables 
•And access to ODBC data sources when defining dropdown list as metadata fields
on Submit and Checkpoints 
Should be licensed separately from Switch. Meaning that only when I use a valid
key, this flow element and its new category title (Database) become available
in the elements pane, the database group becomes available in the variables
panel (i.e. define single/ multi line or condition with variables dialog) and
“Define values from ODBC data source” becomes available as data value for
dropdown list.

The key can either be a permanent or trial key. Both keys have the same result,
however a trial key is time bombed so when it expires, functionality cannot be
used anymore. Same thing when you deactivate a key.

*Acceptance criteria*
This feature was already implemented in Switch 10 update 1. Only thing that
needs to be taken care of is that the Database connect elements appears in it’s
own category instead of being part of the metadata category.

h2. Related Stories


* #0


h2. Tasks


{{table query: SELECT Number, Name, Owner, 'Hours Remaining', 'Task Status' WHERE Type = Task and Story = THIS CARD}} 


h2. Defects


{{table query: SELECT Number, Name, Owner, 'Defect Status' WHERE Type = Defect and Story = THIS CARD}}"|"Story"|""|"yes"|""|""|""|"Switch"|"yes"|"#15"|"#17"|""|""|""|""|""|""|""|"Accepted"|""
"#78"|"Add Database key to Database connector element"|"Description: Notes:"|"Task"|""|"no"|""|""|"#12"|"Switch"|"yes"|"#15"|"#17"|""|""|""|""|""|""|""|""|"Done"
"#79"|"Check that Database features are not available without licence"|"Description: Notes:"|"Task"|""|"no"|""|""|"#12"|"Switch"|"yes"|"#15"|"#17"|""|""|""|""|""|""|""|""|"Done"
"#86"|"Move Database tool into new category"|"Description: Notes:"|"Task"|""|"no"|""|""|"#12"|"Switch"|"yes"|"#15"|"#17"|""|""|""|""|""|""|""|""|"Done"
"#42"|"Betatester reported bugs"|"h2. Narrative


As a  I can  to 5308 - Fixed (Dmitry)
These bugs were all logged by our Spanish distributor. Most of them are related to SwitchClient.

5382 - In progress: Dmitry
6203 - Fixed (Kirill)
6216 - Assigned To: Bhargavi Manjunath
6221 - Assigned To: Bhargavi Manjunath
6222
6241
6246 - Fixed (Dmitry)
6248
6252 - Fixed (Vitali)

h2. Related Stories


* #0


h2. Tasks


{{table query: SELECT Number, Name, Owner, 'Hours Remaining', 'Task Status' WHERE Type = Task and Story = THIS CARD}} 


h2. Defects


{{table query: SELECT Number, Name, Owner, 'Defect Status' WHERE Type = Defect and Story = THIS CARD}}"|"Story"|""|"yes"|""|""|""|"Switch"|"yes"|"#15"|"#17"|""|""|""|""|""|""|""|"Accepted"|""
"#93"|"BZ 6248"|"Description: Notes:"|"Task"|""|"no"|""|""|"#42"|"Switch"|"yes"|"#15"|"#17"|""|""|""|""|""|""|""|""|"Done"
"#92"|"BZ 6241"|"Description: Notes:"|"Task"|""|"no"|""|""|"#42"|"Switch"|"yes"|"#15"|"#17"|""|""|""|""|""|""|""|""|"Done"
"#22"|"WoodWing Configurator "|"h2. Narrative


As a  I can  to 6274
6275
6277
5612

h2. Related Stories


* #0


h2. Tasks


{{table query: SELECT Number, Name, Owner, 'Hours Remaining', 'Task Status' WHERE Type = Task and Story = THIS CARD}} 


h2. Defects


{{table query: SELECT Number, Name, Owner, 'Defect Status' WHERE Type = Defect and Story = THIS CARD}}"|"Story"|""|"yes"|""|""|""|"Switch"|"yes"|"#15"|"#17"|""|""|""|""|""|""|""|"Accepted"|""
"#71"|"BZ 5612"|"Description: Notes:"|"Task"|""|"no"|""|""|"#22"|"Switch"|"yes"|"#15"|"#17"|""|""|""|""|""|""|""|""|"Done"
"#70"|"BZ 6277"|"Description: Notes:"|"Task"|""|"no"|""|""|"#22"|"Switch"|"yes"|"#15"|"#17"|""|""|""|""|""|""|""|""|"Done"
"#90"|"Include 'Generic application' element into Configurator module"|"Description: Notes:"|"Task"|""|"no"|""|""|"#22"|"Switch"|"yes"|"#15"|"#17"|""|""|""|""|""|""|""|""|"Done"
"#68"|"BZ 6274"|"Description: Notes:"|"Task"|""|"no"|""|""|"#22"|"Switch"|"yes"|"#15"|"#17"|""|""|""|""|""|""|""|""|"Done"
"#69"|"BZ 6275"|"Description: Notes:"|"Task"|""|"no"|""|""|"#22"|"Switch"|"yes"|"#15"|"#17"|""|""|""|""|""|""|""|""|"Done"
"#34"|"A key for every module"|"h2. Narrative


As a an operator I can activate every module individuality to end up with a Switch installation that only contains the tools i really need.*Conversation:*
Every module has its specific key. Each key only includes one feature that matches the module.

*Acceptance criteria*
Database module, SwitchClient module, SwitchClient SDK, scripting module, metadata module and configurator module functionality is unlocked with an individual key.
Additional SwitchClient licenses are added with a specific product key (same as it used to be)



h2. Related Stories


* #0


h2. Tasks


{{table query: SELECT Number, Name, Owner, 'Hours Remaining', 'Task Status' WHERE Type = Task and Story = THIS CARD}} 


h2. Defects


{{table query: SELECT Number, Name, Owner, 'Defect Status' WHERE Type = Defect and Story = THIS CARD}}"|"Story"|""|"yes"|""|""|""|"Switch"|"yes"|"#15"|"#17"|""|""|""|""|""|""|""|"Accepted"|""
"#73"|"Check that each module depends on its own key"|"Description: Notes:"|"Task"|""|"no"|""|""|"#34"|"Switch"|"yes"|"#15"|"#17"|""|""|""|""|""|""|""|""|"Done"
"#72"|"Add real keys to modules in Switch"|"Description: Notes:I cannot move this story to Done because I cannot submit my changes unless we have the keys with many possible activations."|"Task"|""|"no"|""|""|"#34"|"Switch"|"yes"|"#15"|"#17"|""|""|""|""|""|""|""|""|"Done"
"#36"|"New installer"|"h2. Narrative


As a an operator I can have an installer that does not refer to old switch flavors anymore but leaves old versions intact to end up with a clean installation of Switch 11 that does not affect previous versions*Conversation:*
Create a new installer for this new product.

*Acceptance criteria:*
The installer is re-branded. (except for the artwork everything refers to 'Switch)
Old versions are *not* longer removed as it used to be (i.e. on win uninstall, on Mac clean up if we can find it)
So a user that has an old LightSwitch 10 and FullSwitch 10 actually ends up with 3 versions (LightSwitch 10, FullSwitch 10 and Switch 11)

h2. Related Stories


* #0


h2. Tasks


{{table query: SELECT Number, Name, Owner, 'Hours Remaining', 'Task Status' WHERE Type = Task and Story = THIS CARD}} 


h2. Defects


{{table query: SELECT Number, Name, Owner, 'Defect Status' WHERE Type = Defect and Story = THIS CARD}}"|"Story"|""|"yes"|""|""|""|"Switch"|"yes"|"#15"|"#17"|""|""|""|""|""|""|""|"Accepted"|""
"#85"|"Create new installer"|"Description: Notes:"|"Task"|""|"no"|""|""|"#36"|"Switch"|"yes"|"#15"|"#17"|""|""|""|""|""|""|""|""|"Done"
"#17"|"Switch name change"|"h2. Narrative


As a an operator I can only see one product name 'Switch' and no more Light, Full or PowerSwitch to not be confused about possible property sets, flavors and modules.*Conversation:*
Change the names LightSwitch, FullSwitch and PowerSwitch to Switch.

(artwork' about panel, splash screen, product icon is not part of this story. This artwork needs to be created first by marketing.)

*Acceptance criteria:*
changes in:
Application name
titles in toolbars and dialogs
name in messages
all server components
all folders on the system (application folder, library, ...)
all files on a system (executable, .plist, ...)
build system

h2. Related Stories


* #0


h2. Tasks


{{table query: SELECT Number, Name, Owner, 'Hours Remaining', 'Task Status' WHERE Type = Task and Story = THIS CARD}} 


h2. Defects


{{table query: SELECT Number, Name, Owner, 'Defect Status' WHERE Type = Defect and Story = THIS CARD}}"|"Story"|""|"yes"|""|""|""|"Switch"|"yes"|"#15"|"#17"|""|""|""|""|""|""|""|"Accepted"|""
"#82"|"Remove flavors from Switch code"|"Description: Notes:"|"Task"|""|"no"|""|""|"#17"|"Switch"|"yes"|"#15"|"#17"|""|""|""|""|""|""|""|""|"Done"
"#88"|"Refactor SwitchCommon\GSCSwitchFeatures.h"|"Description: Notes:"|"Task"|""|"no"|""|""|"#17"|"Switch"|"yes"|"#15"|"#17"|""|""|""|""|""|""|""|""|"Done"
"#89"|"Make sure AppleScript works after removing flavors"|"Description:The problem is that for AppleScripts we use

'tell application PowerSwitch_Service'

This should be somehow resolved. Then we need to make sure that after flavors are removed the AppleScripts (existing and new) works fine Notes:"|"Task"|""|"no"|""|""|"#17"|"Switch"|"yes"|"#15"|"#17"|""|""|""|""|""|""|""|""|"Done"
"#84"|"Check UI strings"|"Description:Don't mention Flavor in UI Notes:"|"Task"|""|"no"|""|""|"#17"|"Switch"|"yes"|"#15"|"#17"|""|""|""|""|""|""|""|""|"Done"
"#83"|"Refactor License manager"|"Description:Change pair SwitchFlavor - LicenseManager Notes:"|"Task"|""|"no"|""|""|"#17"|"Switch"|"yes"|"#15"|"#17"|""|""|""|""|""|""|""|""|"Done"
"#81"|"Update Switch build"|"Description: Notes:"|"Task"|""|"no"|""|""|"#17"|"Switch"|"yes"|"#15"|"#17"|""|""|""|""|""|""|""|""|"Done"
"#11"|"Scripting module"|"h2. Narrative


As a  I can  to As a (prepress) manager on a tight budget I only want to pay for features I
actually use, i.e. Scripting, in order to get the most out of my investment.

*Conversation*
The script element and property editor “Define script expression” should be
licensed separately from Switch. Meaning that only when I use a valid key, this
flow element and its category title (Scripting) become available in the
elements pane and the script expression property editor becomes available in
the properties pane.
The key can either be a permanent or trial key. Both keys have the same result,
however a trial key is time bombed so when it expires, functionality cannot be
used anymore. Same thing when you deactivate a key.

*Acceptance criteria*
Make the script element and features behave like the Database connect tool in
PowerSwitch 10 update1. Meaning that only when it is licensed (separately from
PowerSwitch), it can be used.
Make sure the property editor “Define script expression” is only available if
correctly licensed with a scripting module key.

h2. Related Stories


* #0


h2. Tasks


{{table query: SELECT Number, Name, Owner, 'Hours Remaining', 'Task Status' WHERE Type = Task and Story = THIS CARD}} 


h2. Defects


{{table query: SELECT Number, Name, Owner, 'Defect Status' WHERE Type = Defect and Story = THIS CARD}}"|"Story"|""|"yes"|""|""|""|"Switch"|"yes"|"#15"|"#17"|""|""|""|""|""|""|""|"Accepted"|""
"#66"|"Add license checking mechanism for Scripting module"|"Description:Make sure Switch checks for separate license when loading Script element and Script features such as script expressions in UI Notes:"|"Task"|""|"no"|""|""|"#11"|"Switch"|"yes"|"#15"|"#17"|""|""|""|""|""|""|""|""|"Done"
"#67"|"Move Script element to Scripting module"|"Description: Notes:"|"Task"|""|"no"|""|""|"#11"|"Switch"|"yes"|"#15"|"#17"|""|""|""|""|""|""|""|""|"Done"
"#15"|"SwitchProxy module"|"h2. Narrative


As a  I can  to As a (prepress) manager on a tight budget I only want to pay for features I
actually use, i.e. SwitchProxy module, in order to get the most out of my
investment.

*Conversation*
The SwitchProxy module is separate product and released with Switch 10 but from
Switch 11 on it will be “commercially” considered as a module.
No development effort required, just writing this story for completeness and to
make sure it gets tested by QA 

*Acceptance criteria*
SwitchProxy works fine with Switch 11

h2. Related Stories


* #0


h2. Tasks


{{table query: SELECT Number, Name, Owner, 'Hours Remaining', 'Task Status' WHERE Type = Task and Story = THIS CARD}} 


h2. Defects


{{table query: SELECT Number, Name, Owner, 'Defect Status' WHERE Type = Defect and Story = THIS CARD}}"|"Story"|""|"yes"|""|""|""|"Switch"|"yes"|"#15"|"#17"|""|""|""|""|""|""|""|"Accepted"|""
"#75"|"Check SwitchProxy is not able to connect to Switch if not licensed"|"Description: Notes:"|"Task"|""|"no"|""|""|"#15"|"Switch"|"yes"|"#15"|"#17"|""|""|""|""|""|""|""|""|"Done"
"#74"|"Add real key to Switch"|"Description: Notes:"|"Task"|""|"no"|""|""|"#15"|"Switch"|"yes"|"#15"|"#17"|""|""|""|""|""|""|""|""|"Done"
"#9"|"Client SDK module"|"h2. Narrative


As a  I can  to As a (prepress) manager on a tight budget I don’t want to pay twice for the
same features, so when I have purchased the Client SDK module I need the
SwitchClient module included. 

*Conversation*
The Client SDK is already a separate module (with its own license key) and
released with Switch 10 but from Switch 11 on it will be “commercially”
considered as a module.
Whoever buys this module is automatically entitled to use the SwitchClient
module. 

*Acceptance criteria*
Using only 1 key, the one for Client SDK, the same features and connection
rights as in the SwitchClient module become available.
Note that in such case the customer does not get separate keys for Client SDK
and SwitchClient module.

h2. Related Stories


* #0


h2. Tasks


{{table query: SELECT Number, Name, Owner, 'Hours Remaining', 'Task Status' WHERE Type = Task and Story = THIS CARD}} 


h2. Defects


{{table query: SELECT Number, Name, Owner, 'Defect Status' WHERE Type = Defect and Story = THIS CARD}}"|"Story"|""|"yes"|""|""|""|"Switch"|"yes"|"#15"|"#17"|""|""|""|""|""|""|""|"Accepted"|""
"#80"|"Check that connecitons from Client and SDK based clients"|"Description:Check different variations of Client and SDK licenses - Client should be able to connect with both licenses, SDK based Client should be able to connect only with ClientSDK license;

Make sure that number of availble connections is calculated correctly according to license installed. Notes:"|"Task"|""|"no"|""|""|"#9"|"Switch"|"yes"|"#15"|"#17"|""|""|""|""|""|""|""|""|"Done"
"#77"|"Make sure Client SDK enables Client license"|"Description: Notes:"|"Task"|""|"no"|""|""|"#9"|"Switch"|"yes"|"#15"|"#17"|""|""|""|""|""|""|""|""|"Done"
"#87"|"Add Switch Client SDK license key"|"Description:Make sure Switch allow connection of ClientSDK based apps only when key is activated Notes:"|"Task"|""|"no"|""|""|"#9"|"Switch"|"yes"|"#15"|"#17"|""|""|""|""|""|""|""|""|"Done"
"#98"|"Fix failing Merge PDF/Metadata Test"|"Description:Hello Davy,

I’ve investigated the problem of Merge PDF/Metadata Test. It has wrong test logic that should be reworked. Eugene Volkorez will fix this test tomorrow. 
...

Best regards,
Denis Koleda
--------------------------------------------------
You can access the virtual machine through remote desktop:

Address = 10.13.133.79

Username = Shaker

Password = 123

 

There is already a Switch installed. You can find TestDrive and the Shaker tests on the desktop. Let me know if you have any questions or problems. I will temporarily disable cruisecontrol until you are ready with your investigations, please let me know when I should enable cruisecontrol again.

 


 

 Notes:18:34:18	Shaker log:	Error	FAILED Test 'MergePDF_Metadata' (Actual test output does not match reference output)18:34:20	Shaker log:	Inform	FAILED Test case 'D:/build-development/Switch_10.x/Depot/Shaker Tests/NoSetupRequired/FeatureTests/Elements/Tools/Merge PDF pages/MetadataTest' Detected error string: FAILED
----------------------------------------------------------------------------------------------
09:44:50	Shaker log:	Error	FAILED Test 'Assemble Job Scheme Arbitrary Files' (Actual test output does not match reference output)09:44:50	Shaker log:	Inform	FAILED Test case 'D:/build-development/Switch_10.x/Depot/Shaker Tests/NoSetupRequired/FeatureTests/Elements/Basics/Assemble job/Arbitrary files' 12:01:35	Shaker log:	Error	FAILED Test 'MergePDF_Metadata' (Actual test output does not match reference output)12:01:37	Shaker log:	Inform	FAILED Test case 'D:/build-development/Switch_10.x/Depot/Shaker Tests/NoSetupRequired/FeatureTests/Elements/Tools/Merge PDF pages/MetadataTest' Detected error string: FAILED
-----------------------------------------------------------------------------------------------
 Errors/Warnings: (12)  
19:53:31	Shaker log:	Error	FAILED Test 'Connection_Priority' (Actual test output does not match reference outputUnexpected error message in log)19:53:31	Shaker log:	Inform	FAILED Test case 'D:/build-development/Switch_10.x/Depot/Shaker Tests/NoSetupRequired/FeatureTests/Elements/Tools/hold job/Connection_Priority' 19:55:07	Shaker log:	Error	FAILED Test 'Connection_SpaceJobsApart' (Actual test output does not match reference output)19:55:07	Shaker log:	Inform	FAILED Test case 'D:/build-development/Switch_10.x/Depot/Shaker Tests/NoSetupRequired/FeatureTests/Elements/Tools/hold job/Connection_SpaceJobsApart' 20:12:54	Shaker log:	Error	FAILED Test 'MergePDF_Metadata' (Actual test output does not match reference output)20:12:55	Shaker log:	Inform	FAILED Test case 'D:/build-development/Switch_10.x/Depot/Shaker Tests/NoSetupRequired/FeatureTests/Elements/Tools/Merge PDF pages/MetadataTest' Detected error string: FAILED
------------------------------------------------------------------------------------------------
05:39:12	Shaker log:	Error	FAILED Test 'MergePDF_Metadata' (Actual test output does not match reference output)05:39:13	Shaker log:	Inform	FAILED Test case 'D:/build-development/Switch_10.x/Depot/Shaker Tests/NoSetupRequired/FeatureTests/Elements/Tools/Merge PDF pages/MetadataTest' 06:37:04	Shaker log:	Error	FAILED Test '3_1 FileStatistics class' (Actual test output does not match reference outputNot all expected errors are in log)06:37:05	Shaker log:	Inform	FAILED Test case 'D:/build-development/Switch_10.x/Depot/Shaker Tests/NoSetupRequired/FeatureTests/Other/Scripting/Metadata module/FileStatistics class' Detected error string: FAILED"|"Task"|""|"no"|""|""|""|"Switch"|"yes"|"#15"|"#17"|""|""|""|""|""|""|""|""|"Done"
"#99"|"BZ 6309 - Switch 10 can't upload to FTP user root folder_1"|"Description: Notes:"|"Task"|""|"no"|""|""|""|"Switch"|"yes"|"#15"|"#17"|""|""|""|""|""|""|""|""|"Done"
"#18"|"Generated Sprint-18"|""|"Sprint"|""|"no"|""|""|""|""|"yes"|"#15"|""|""|""|""|""|""|"2011-10-10 00:00:00.0"|"2011-10-23 00:00:00.0"|""|""
"#72"|"10u2 QA WoodWing Configurator"|"h2. Narrative


As a  I can  to 6274
6275
6277
5612*extra notes for testing*
test these 4 bugs + general sanity check for download configurator

h2. Related Stories


* #0


h2. Tasks


{{table query: SELECT Number, Name, Owner, 'Hours Remaining', 'Task Status' WHERE Type = Task and Story = THIS CARD}} 


h2. Defects


{{table query: SELECT Number, Name, Owner, 'Defect Status' WHERE Type = Defect and Story = THIS CARD}}"|"Story"|""|"yes"|""|""|""|"Switch"|"yes"|"#15"|"#18"|""|""|""|""|""|""|""|"Accepted"|""
"#71"|"10u2 QA Bugfixes customer bugs"|"h2. Narrative


As a  I can  to These are 3  bugs reported by customers against previous versions of Switch:

- BZ 4331: 'Hold' on connection doesn't always work

- BZ 6309 - Switch 10 can't upload to FTP user root folder 

- BZ 6329 - Mail receive can't handle special character like /*Extra notes for testing*
bug 4331: Test on windows laptop of Carine were she already reproduced bug 4331. Don't put too much time in it, let customers test. Run some stress tests with hold job and run over night.

h2. Related Stories


* #0


h2. Tasks


{{table query: SELECT Number, Name, Owner, 'Hours Remaining', 'Task Status' WHERE Type = Task and Story = THIS CARD}} 


h2. Defects


{{table query: SELECT Number, Name, Owner, 'Defect Status' WHERE Type = Defect and Story = THIS CARD}}"|"Story"|""|"yes"|""|""|""|"Switch"|"yes"|"#15"|"#18"|""|""|""|""|""|""|""|"Accepted"|""
"#20"|"DEV Info on missing elements"|"h2. Narrative


As a a Switch Administrator I can see to which module a tool, property editor or variable group belongs if i import a flow to know exactly what is missing and make it easy to extend Switch, buy or try  additional module*Conversation / Acceptance criteria*

When importing a flow with missing element a warning message appears mentioning 'Unsupported flow element xxx was detected when importing this flow” instead of 'Skipped unsupported flow element xxx”
Once imported and when hoovering over such element on the canvas the message still says: 'The flow element cannot be found by Switch.' (nevertheless it's a missing configurator or an unlicensed tool, we always give the same message.)

When importing a flow that uses script expression editor and scripting module is not active, the message says: 'Unsupported property editor 'define script expression' was detected when importing this flow'. 
Once imported, flow validation fails just like when importing such flow from PowerSwitch in LightSwitch

When importing a flow that uses a variable from a non supported group (i.e. metadata or database), the message says: 'Unsupported variable was detected when importing this flow'. 
Once imported, flow validation fails. Currently it is not clear to me what happens if you import such flow from PowerSwitch in LightSwitch so this behavior should be improved

*Notes for testing*
Create separate flows for each element to test flow validation and error message
Test on one version of Mac and windows

h2. Related Stories


* #0


h2. Tasks


{{table query: SELECT Number, Name, Owner, 'Hours Remaining', 'Task Status' WHERE Type = Task and Story = THIS CARD}} 


h2. Defects


{{table query: SELECT Number, Name, Owner, 'Defect Status' WHERE Type = Defect and Story = THIS CARD}}"|"Story"|""|"yes"|""|""|""|"Switch"|"yes"|"#15"|"#18"|""|""|""|""|""|""|""|"Accepted"|""
"#117"|"Add license check for Scripting module"|"Description:When importing a flow that uses script expression editor and scripting module is not active, the message says: 'Unsupported property editor “define script expression” was detected when importing this flow'. 
Once imported, flow validation fails just like when importing such flow from PowerSwitch in LightSwitch Notes:"|"Task"|""|"no"|""|""|"#20"|"Switch"|"yes"|"#15"|"#18"|""|""|""|""|""|""|""|""|"Done"
"#129"|"Add license checking for variables_1"|"Description:When importing a flow that uses a variable from a non supported group (i.e. metadata or database), the message says: “Unsupported variable was detected when importing this flow”. 
Once imported, flow validation fails. Currently it is not clear to me what happens if you import such flow from PowerSwitch in LightSwitch so this behavior should be improved Notes:"|"Task"|""|"no"|""|""|"#20"|"Switch"|"yes"|"#15"|"#18"|""|""|""|""|""|""|""|""|"Done"
"#116"|"Change warning message"|"Description:When importing a flow with missing element a warning message appears mentioning 'Unsupported flow element xxx was detected when importing this flow” instead of 'Skipped unsupported flow element xxx” Notes:"|"Task"|""|"no"|""|""|"#20"|"Switch"|"yes"|"#15"|"#18"|""|""|""|""|""|""|""|""|"Done"
"#142"|"Bug 6356 - CROSSROADS: new callas configurator"|"Description:We will probably not include this configurator in the update 2 anymore, but we have to get it on crossroads on time as the new script was already uploaded since October 6. Notes:"|"Task"|""|"no"|""|""|""|"Switch"|"yes"|"#15"|"#18"|""|""|""|""|""|""|""|""|"Done"
"#136"|"bz6295"|"Description: Notes:"|"Task"|""|"no"|""|""|""|"Switch"|"yes"|"#15"|"#18"|""|""|""|""|""|""|""|""|"Done"
"#106"|"bug 6226 Assemble job"|"Description: Notes:"|"Task"|""|"no"|""|""|""|"Switch"|"yes"|"#15"|"#18"|""|""|""|""|""|""|""|""|"Done"
"#141"|"Support question BGZ 6401"|"Description:Bug 6401 - Invalid syntax of xmp path 'dc:title/*[@xml:lang='x-default']' Notes:"|"Task"|""|"no"|""|""|""|"Switch"|"yes"|"#15"|"#18"|""|""|""|""|""|""|""|""|"Done"
"#122"|"Support question BGZ 6359"|"Description:Bug 6359 - Switch Photoshop CS5 open commands sometimes changes clipping path Notes:"|"Task"|""|"no"|""|""|""|"Switch"|"yes"|"#15"|"#18"|""|""|""|""|""|""|""|""|"Done"
"#104"|"Bug　6295 - ftp-send 'ignores' transfer as binary property"|"Description: Notes:"|"Task"|""|"no"|""|""|""|"Switch"|"yes"|"#15"|"#18"|""|""|""|""|""|""|""|""|"Done"
"#125"|"Create wizard prototype"|"Description: Notes:"|"Task"|""|"no"|""|""|""|"Switch"|"yes"|"#15"|"#18"|""|""|""|""|""|""|""|""|"Done"
"#128"|"10u2 bz 6382 : metadate 'no-yes list' fields default value is not remembered"|"Description:http://87.118.100.46/bugzilla/show_bug.cgi?id=6382 Notes:"|"Task"|""|"no"|""|""|""|"Switch"|"yes"|"#15"|"#18"|""|""|""|""|""|""|""|""|"Done"
"#107"|"Don't show unnecessary preferences in UI"|"Description: Notes:"|"Task"|""|"no"|""|""|""|"Switch"|"yes"|"#15"|"#18"|""|""|""|""|""|""|""|""|"Done"
"#153"|"Bug 6216 - Betatester - PitStop Server only allows PDF files"|"Description: Notes:"|"Task"|""|"no"|""|""|""|"Switch"|"yes"|"#15"|"#18"|""|""|""|""|""|""|""|""|"Done"
"#155"|"Bug 6222 - Betatester - Metadata should be aligned at the left-hand side"|"Description: Notes:"|"Task"|""|"no"|""|""|""|"Switch"|"yes"|"#15"|"#18"|""|""|""|""|""|""|""|""|"Done"
"#120"|"Shaker tests for properties of FTP Receive"|"Description: Notes:"|"Task"|""|"no"|""|""|""|"Switch"|"yes"|"#15"|"#18"|""|""|""|""|""|""|""|""|"Done"
"#159"|"Bug 6252 - Betatester - Error appears when Database connect module is not licensed nor used!"|"Description: Notes:"|"Task"|""|"no"|""|""|""|"Switch"|"yes"|"#15"|"#18"|""|""|""|""|""|""|""|""|"Done"
"#119"|"Shaker tests for properties of FTP Send"|"Description: Notes:"|"Task"|""|"no"|""|""|""|"Switch"|"yes"|"#15"|"#18"|""|""|""|""|""|""|""|""|"Done"
"#139"|"Support question BGZ 6398"|"Description:Bug 6398 - 'Can't lock user global data' error in Assemble Tool Notes:"|"Task"|""|"no"|""|""|""|"Switch"|"yes"|"#15"|"#18"|""|""|""|""|""|""|""|""|"Done"
"#112"|"Move data from old location into new one"|"Description:Including upgrade of paths inside tickets Notes:"|"Task"|""|"no"|""|""|""|"Switch"|"yes"|"#15"|"#18"|""|""|""|""|""|""|""|""|"Done"
"#110"|"Create Upgrade application template"|"Description:Create app template and add it into Installer Notes:"|"Task"|""|"no"|""|""|""|"Switch"|"yes"|"#15"|"#18"|""|""|""|""|""|""|""|""|"Done"
"#137"|"bz6251"|"Description: Notes:"|"Task"|""|"no"|""|""|""|"Switch"|"yes"|"#15"|"#18"|""|""|""|""|""|""|""|""|"Done"
"#156"|"Bug 6241 - Betatester - Wrong warning message when selecting 1 job"|"Description: Notes:"|"Task"|""|"no"|""|""|""|"Switch"|"yes"|"#15"|"#18"|""|""|""|""|""|""|""|""|"Done"
"#103"|"Bug　6338 - ftp-receive and ftp-send have different password settings"|"Description: Notes:"|"Task"|""|"no"|""|""|""|"Switch"|"yes"|"#15"|"#18"|""|""|""|""|""|""|""|""|"Done"
"#126"|"10u2 bz 5308 : SwitchClient resets its dialog size to default"|"Description:BETATESTER - http://87.118.100.46/bugzilla/show_bug.cgi?id=5308 Notes:still reproducible on certain systems. please read the comments on bz"|"Task"|""|"no"|""|""|""|"Switch"|"yes"|"#15"|"#18"|""|""|""|""|""|""|""|""|"Done"
"#150"|"Support question BGZ 6415"|"Description:Bug 6415 - FTPS (FTP over SSL) vs. SFTP (SSH File Transfer Protocol): Notes:"|"Task"|""|"no"|""|""|""|"Switch"|"yes"|"#15"|"#18"|""|""|""|""|""|""|""|""|"Done"
"#105"|"Bug　6251 - FTP problem: Can't download file '/h:/ftp/test/DO1_0001.090.PDF';"|"Description: Notes:"|"Task"|""|"no"|""|""|""|"Switch"|"yes"|"#15"|"#18"|""|""|""|""|""|""|""|""|"Done"
"#109"|"Preserve hidden properties so they aren't missed"|"Description: Notes:"|"Task"|""|"no"|""|""|""|"Switch"|"yes"|"#15"|"#18"|""|""|""|""|""|""|""|""|"Done"
"#152"|"Bug 6203 - Betatester - Pitstop configurator error message when files are submitted as one jobs "|"Description: Notes:"|"Task"|""|"no"|""|""|""|"Switch"|"yes"|"#15"|"#18"|""|""|""|""|""|""|""|""|"Done"
"#114"|"10u2 Documentation bugs"|"Description:6216
6221  Notes:"|"Task"|""|"no"|""|""|""|"Switch"|"yes"|"#15"|"#18"|""|""|""|""|""|""|""|""|"Done"
"#127"|"10u2 bz 6222 : Metadata should be aligned at the left"|"Description:Betatster - http://87.118.100.46/bugzilla/show_bug.cgi?id=6222 Notes:I wasn't looking at the right place when I verified this as fixed.
Turns out it isn't fixed at all.

Betatester noticed this.
please read comments in bz

--Toon"|"Task"|""|"no"|""|""|""|"Switch"|"yes"|"#15"|"#18"|""|""|""|""|""|""|""|""|"Done"
"#140"|"10u2 Strings"|"Description:Send for translation and put reviewed strings back to depot Notes:Reviewed strings were put on Perforce. Still waiting for translations."|"Task"|""|"no"|""|""|""|"Switch"|"yes"|"#15"|"#18"|""|""|""|""|""|""|""|""|"Done"
"#138"|"bz6226"|"Description: Notes:waiting on a comment from Jared"|"Task"|""|"no"|""|""|""|"Switch"|"yes"|"#15"|"#18"|""|""|""|""|""|""|""|""|"Done"
"#132"|"10u2 bz6394 	Can't have more the one metadata drop down list with a required value "|"Description:http://87.118.100.46/bugzilla/show_bug.cgi?id=6394

When a submit/checkpoint has more than one dropdown list with a required value
and you submit a job ,changing the value of only one of the drop down list is
enough to submit it. The other drop down lists no longer need a value. Notes:"|"Task"|""|"no"|""|""|""|"Switch"|"yes"|"#15"|"#18"|""|""|""|""|""|""|""|""|"Done"
"#113"|"Conditional license - support maintanance key"|"Description: Notes:Here is no support of maintenance key but support of Switch 09 and 10 keys in Switch 11"|"Task"|""|"no"|""|""|""|"Switch"|"yes"|"#15"|"#18"|""|""|""|""|""|""|""|""|"Done"
"#115"|"Show upgrade progress"|"Description: Notes:"|"Task"|""|"no"|""|""|""|"Switch"|"yes"|"#15"|"#18"|""|""|""|""|""|""|""|""|"Done"
"#151"|"Bug 5382 - Betatester - When submitting multiple jobs into 1 job - icon not ok"|"Description:

 Notes:comment from Dieter on bugzilla :
This is an improvement / feature request and I like the suggestion from Kirill. 
Raising priority but moving away from update 2 so it can be picked up as a
story for a next sprint in Switch 11 project.

I'll put this task on 'done' because there is nothing I can do for this bug for 10u2"|"Task"|""|"no"|""|""|""|"Switch"|"yes"|"#15"|"#18"|""|""|""|""|""|""|""|""|"Done"
"#157"|"Bug 6246 - Betatester - Not possible to deselect a job in table view"|"Description: Notes:"|"Task"|""|"no"|""|""|""|"Switch"|"yes"|"#15"|"#18"|""|""|""|""|""|""|""|""|"Done"
"#111"|"Search for installed Switch versions"|"Description:Perform search in registry and in default app data root Notes:"|"Task"|""|"no"|""|""|""|"Switch"|"yes"|"#15"|"#18"|""|""|""|""|""|""|""|""|"Done"
"#158"|"Bug 6248 - CHECKED - Betatester - Switch service is constantly crashing"|"Description: Notes:"|"Task"|""|"no"|""|""|""|"Switch"|"yes"|"#15"|"#18"|""|""|""|""|""|""|""|""|"Done"
"#134"|"bz6338"|"Description: Notes:"|"Task"|""|"no"|""|""|""|"Switch"|"yes"|"#15"|"#18"|""|""|""|""|""|""|""|""|"Done"
"#19"|"Generated Sprint-19"|""|"Sprint"|""|"no"|""|""|""|""|"yes"|"#15"|""|""|""|""|""|""|"2011-10-24 00:00:00.0"|"2011-11-05 23:00:00.0"|""|""
"#74"|"QA Switch name change"|"h2. Narrative


As a an operator I can only see one product name 'Switch' and no more Light, Full or PowerSwitch to not be confused about possible property sets, flavors and modules.*Conversation:*
Change the names LightSwitch, FullSwitch and PowerSwitch to Switch.

(artwork' about panel, splash screen, product icon is not part of this story. This artwork needs to be created first by marketing.)

*Acceptance criteria:*
changes in:
Application name
titles in toolbars and dialogs
name in messages
all server components
all folders on the system (application folder, library, ...)
all files on a system (executable, .plist, ...)
build system

* Notes for testing:
Should be tested on one MacOS version and one Windows version.
Folders and files on disk can be checked using clean install procedure
Can be tested after user story for Switch installer
 

h2. Related Stories


* #0


h2. Tasks


{{table query: SELECT Number, Name, Owner, 'Hours Remaining', 'Task Status' WHERE Type = Task and Story = THIS CARD}} 


h2. Defects


{{table query: SELECT Number, Name, Owner, 'Defect Status' WHERE Type = Defect and Story = THIS CARD}}"|"Story"|""|"yes"|""|""|""|"Switch"|"yes"|"#15"|"#19"|""|""|""|""|""|""|""|"Accepted"|""
"#171"|"Testing names on Windows and mac"|"Description: Notes:Update 1: Mac OSX 10.6.8 build 279320 Ok
Update 2: Windows Vista Business Service Pack 1 build 279230 OK

No old names (PowerSwitch,...) found."|"Task"|""|"no"|""|""|"#74"|"Switch"|"yes"|"#15"|"#19"|""|""|""|""|""|""|""|""|"Done"
"#62"|"QA SwitchClient module"|"h2. Narrative


As a  I can  to As a (prepress) manager on a tight budget I only want to pay for features I
actually use, i.e. SwitchClient, in order to get the most out of my investment.

*Conversation*
The communication elements (Submit point, Checkpoint and Checkpoint via mail)
should be licensed separately from Switch. Meaning that only when I use a valid
key, these elements become available in the Communication section of the
elements pane.
Next to the elements also the User panel and the Client Activity and Client
Connection pane on the Statistics panel should become available whenever
correctly licensed.
The key can either be a permanent or trial key. Both keys have the same result,
however a trial key is time bombed so when it expires, functionality cannot be
used anymore. Same thing when you deactivate a key.

*Acceptance criteria*
Make the Submit point, Checkpoint and Checkpoint via mail behave like the
Database connect tool in Switch 10 update1. Meaning that only when they are
licensed (separately from PowerSwitch), they can be used. Note that the
Database module only includes 1 tool and the Client module includes 3 elements.
Make sure the User panel appears according to the licensing status
Make sure the Client Activity and Client Connection pane on the Statistics
panel appear according to the licensing status.
Note that nothing changes to the “5 license included” policy for PowerSwitch so
if a customer has licensed the SwitchClient module then he or she still gets 5
licenses, knowing that this number of licenses can be expanded with additional
Client licensing.

*Notes for testing*
Mac and Windows
Different users/roles/groups
Test if number of client licenses respected



h2. Related Stories


* #0


h2. Tasks


{{table query: SELECT Number, Name, Owner, 'Hours Remaining', 'Task Status' WHERE Type = Task and Story = THIS CARD}} 


h2. Defects


{{table query: SELECT Number, Name, Owner, 'Defect Status' WHERE Type = Defect and Story = THIS CARD}}"|"Story"|""|"yes"|""|""|""|"Switch"|"yes"|"#15"|"#19"|""|""|""|""|""|""|""|"Accepted"|""
"#173"|"Testing Client Panes"|"Description: Notes:Testing if you can't see client panes when not activated and if you can when it is activated on mac and windows.

Mac OSX 10.6.8 and Switch build 279320 Ok
Windows Vista Business Service Pack 1, build 279320 Ok.

Users are shown when license activated and not shown when deactivated (you do have to restart the program for this)."|"Task"|""|"no"|""|""|"#62"|"Switch"|"yes"|"#15"|"#19"|""|""|""|""|""|""|""|""|"Done"
"#69"|"10u2 QA Betatester reported bugs"|"h2. Narrative


As a  I can  to 5308 - Fixed (Dmitry)
These bugs were all logged by our Spanish distributor. Most of them are related to SwitchClient.

5382 - In progress: Dmitry
6203 - Fixed (Kirill)
6216 - Assigned To: Bhargavi Manjunath
6221 - Assigned To: Bhargavi Manjunath
6222
6241
6246 - Fixed (Dmitry)
6248
6252 - Fixed (Vitali)*notes for testing*
Test on Mac and Windows

h2. Related Stories


* #0


h2. Tasks


{{table query: SELECT Number, Name, Owner, 'Hours Remaining', 'Task Status' WHERE Type = Task and Story = THIS CARD}} 


h2. Defects


{{table query: SELECT Number, Name, Owner, 'Defect Status' WHERE Type = Defect and Story = THIS CARD}}"|"Story"|""|"yes"|""|""|""|"Switch"|"yes"|"#15"|"#19"|""|""|""|""|""|""|""|"Accepted"|""
"#154"|"Bug 6221 - How does the variable group 'Connection' work? "|"Description: Notes:"|"Task"|""|"no"|""|""|"#69"|"Switch"|"yes"|"#15"|"#19"|""|""|""|""|""|""|""|""|"Done"
"#145"|"QA Test Betatester reported bugs"|"Description: Notes:"|"Task"|""|"no"|""|""|"#69"|"Switch"|"yes"|"#15"|"#19"|""|""|""|""|""|""|""|""|"Done"
"#61"|"QA Metadata module"|"h2. Narrative


As a  I can  to As a (prepress) manager on a tight budget I only want to pay for features I
actually use, i.e. Metadata tools and access to the metadata variables and
possibility to gather content for a SwitchClient dropdown list straight from an
XML based dataset, in order to get the most out of my investment.

*Conversation*
•The metadata elements (XML, JDF, XMP and opaque pickup, XMP inject, export
metadata)
•The metadata variables 
•And access to XML based datasets when defining dropdown list as metadata
fields on Submit and Checkpoints, 
Should be licensed separately from Switch. Meaning that only when I use a valid
key, those flow elements become available in the elements pane, the metadata
group becomes available in the variables panel (i.e. define single/ multi line
or condition with variables dialog) and  “Define values from dataset” becomes
available as data value for dropdown list.

The key can either be a permanent or trial key. Both keys have the same result,
however a trial key is time bombed so when it expires, functionality cannot be
used anymore. Same thing when you deactivate a key.

Note about datasets:

*Acceptance criteria*
Make those metadata elements and features behave like the Database connect tool
and the database variables in Switch 10 update1. Meaning that only when they
are licensed (separately from PowerSwitch), they appear in the metadata
category and so can be used.
Note that XSLT transform and log job info are not included in this module so
they do not appear/disappear based on license status of this module.

h2. Related Stories


* #0


h2. Tasks


{{table query: SELECT Number, Name, Owner, 'Hours Remaining', 'Task Status' WHERE Type = Task and Story = THIS CARD}} 


h2. Defects


{{table query: SELECT Number, Name, Owner, 'Defect Status' WHERE Type = Defect and Story = THIS CARD}}"|"Story"|""|"yes"|""|""|""|"Switch"|"yes"|"#15"|"#19"|""|""|""|""|""|""|""|"Accepted"|""
"#177"|"test elements  on a windows machine"|"Description:ONLY after licensing the metadata module :
The metadata elements (XML, JDF, XMP and opaque pickup, XMP inject, export
metadata)
are available
 Notes:"|"Task"|""|"no"|""|""|"#61"|"Switch"|"yes"|"#15"|"#19"|""|""|""|""|""|""|""|""|"Done"
"#181"|"test xml based datasets as meta data dropdown sources on a windows machine"|"Description:only after the metadata module is licensed the user should have access to XML based datasets when defining dropdown list as metadata fields on Submit and Checkpoints Notes:Oké this was tested on a Windows vista business Service pack 2 machine with build 279320."|"Task"|""|"no"|""|""|"#61"|"Switch"|"yes"|"#15"|"#19"|""|""|""|""|""|""|""|""|"Done"
"#178"|"test elements  on a Mac osX machine"|"Description:ONLY after licensing the metadata module :
The metadata elements (XML, JDF, XMP and opaque pickup, XMP inject, export
metadata)
are available
 Notes:Checked only available after licensing the metadata-license on Mac OSX 10.6.8 and build 279649."|"Task"|""|"no"|""|""|"#61"|"Switch"|"yes"|"#15"|"#19"|""|""|""|""|""|""|""|""|"Done"
"#179"|"test metadata variables on a windows machine"|"Description:ONLY after the metadata module is licensed the metadata variables are available. Notes:Ok tested on:
Windows vista business Service pack 2 build 279320"|"Task"|""|"no"|""|""|"#61"|"Switch"|"yes"|"#15"|"#19"|""|""|""|""|""|""|""|""|"Done"
"#180"|"test metadata variables on a mac osX machine"|"Description:ONLY after the metadata module is licensed the metadata variables are available. Notes:OK tested on a Mac OSX 10.6.8 Build 279649"|"Task"|""|"no"|""|""|"#61"|"Switch"|"yes"|"#15"|"#19"|""|""|""|""|""|""|""|""|"Done"
"#182"|"test xml based datasets as meta data dropdown sources on a mac osX machine"|"Description:only after the metadata module is licensed the user should have access to XML based datasets when defining dropdown list as metadata fields on Submit and Checkpoints Notes:Oke tested on a Mac OSX 10.6.8 with Build 279649 installed"|"Task"|""|"no"|""|""|"#61"|"Switch"|"yes"|"#15"|"#19"|""|""|""|""|""|""|""|""|"Done"
"#65"|"QA A key for every module"|"h2. Narrative


As a an operator I can activate every module individuality to end up with a Switch installation that only contains the tools i really need.*Conversation:*
Every module has its specific key. Each key only includes one feature that matches the module.

*Acceptance criteria*
Database module, SwitchClient module, SwitchClient SDK, scripting module, metadata module and configurator module functionality is unlocked with an individual key.
Additional SwitchClient licenses are added with a specific product key (same as it used to be)

*Notes for testing*
Necessary to test each key separatly: test if features are locked/unlocked + test if functionality still works.
Necessary to test combinations: Test if features are locked/unlocked for combination from old Light, Full, PowerSwitch, PowerSwitch + DB
Test on one version on Mac and Windows
Shaker tests can be used to test functionality by using TestDrive as UI application by QA.

h2. Related Stories


* #0


h2. Tasks


{{table query: SELECT Number, Name, Owner, 'Hours Remaining', 'Task Status' WHERE Type = Task and Story = THIS CARD}} 


h2. Defects


{{table query: SELECT Number, Name, Owner, 'Defect Status' WHERE Type = Defect and Story = THIS CARD}}"|"Story"|""|"yes"|""|""|""|"Switch"|"yes"|"#15"|"#19"|""|""|""|""|""|""|""|"Accepted"|""
"#195"|"test switchclient SDK module Key + functionality on a windows machine"|"Description: Notes:"|"Task"|""|"no"|""|""|"#65"|"Switch"|"yes"|"#15"|"#19"|""|""|""|""|""|""|""|""|"Done"
"#205"|"test keys on mac and win"|"Description: Notes:"|"Task"|""|"no"|""|""|"#65"|"Switch"|"yes"|"#15"|"#19"|""|""|""|""|""|""|""|""|"Done"
"#199"|"test metadata module Key + functionality on a mac machine"|"Description: Notes:Oké tested on a Mac osX 10.6.8 with build 279649."|"Task"|""|"no"|""|""|"#65"|"Switch"|"yes"|"#15"|"#19"|""|""|""|""|""|""|""|""|"Done"
"#202"|"test configurator module Key + functionality on a windows machine"|"Description: Notes:"|"Task"|""|"no"|""|""|"#65"|"Switch"|"yes"|"#15"|"#19"|""|""|""|""|""|""|""|""|"Done"
"#194"|"test switchclient module Key + functionality on a mac machine"|"Description: Notes:"|"Task"|""|"no"|""|""|"#65"|"Switch"|"yes"|"#15"|"#19"|""|""|""|""|""|""|""|""|"Done"
"#198"|"test scripting module Key + functionality on a windows machine"|"Description: Notes:"|"Task"|""|"no"|""|""|"#65"|"Switch"|"yes"|"#15"|"#19"|""|""|""|""|""|""|""|""|"Done"
"#203"|"test additional switchclient licenses on a windows machine"|"Description: Notes:"|"Task"|""|"no"|""|""|"#65"|"Switch"|"yes"|"#15"|"#19"|""|""|""|""|""|""|""|""|"Done"
"#201"|"test configurator module Key + functionality on a mac machine"|"Description: Notes:"|"Task"|""|"no"|""|""|"#65"|"Switch"|"yes"|"#15"|"#19"|""|""|""|""|""|""|""|""|"Done"
"#196"|"test switchclient SDK module Key + functionality on a mac machine"|"Description: Notes:"|"Task"|""|"no"|""|""|"#65"|"Switch"|"yes"|"#15"|"#19"|""|""|""|""|""|""|""|""|"Done"
"#200"|"test metadata module Key + functionality on a windows machine"|"Description: Notes:"|"Task"|""|"no"|""|""|"#65"|"Switch"|"yes"|"#15"|"#19"|""|""|""|""|""|""|""|""|"Done"
"#193"|"test switchclient module Key + functionality on a windows machine"|"Description: Notes:"|"Task"|""|"no"|""|""|"#65"|"Switch"|"yes"|"#15"|"#19"|""|""|""|""|""|""|""|""|"Done"
"#197"|"test scripting module Key + functionality on a mac machine"|"Description: Notes:"|"Task"|""|"no"|""|""|"#65"|"Switch"|"yes"|"#15"|"#19"|""|""|""|""|""|""|""|""|"Done"
"#191"|"test database module Key + functionallity on a mac machine"|"Description: Notes:"|"Task"|""|"no"|""|""|"#65"|"Switch"|"yes"|"#15"|"#19"|""|""|""|""|""|""|""|""|"Done"
"#192"|"test database module Key + functionality on a windows machine"|"Description: Notes:"|"Task"|""|"no"|""|""|"#65"|"Switch"|"yes"|"#15"|"#19"|""|""|""|""|""|""|""|""|"Done"
"#102"|"10u2 Required bugfixes for update 2_1_1"|"h2. Narrative


As a  I can  to DEV 13 + QA 2

- Bug　6349 - application error after ftp stresstesting
- Bug　6338 - ftp-receive and ftp-send have different password settings
- Bug　6295 - ftp-send 'ignores' transfer as binary property
- Bug　6251 - FTP problem: Can't download file '/h:/ftp/test/DO1_0001.090.PDF'; error message: Operation interrupted or timeout
- bug 6226 Assemble job

h2. Related Stories


* #0


h2. Tasks


{{table query: SELECT Number, Name, Owner, 'Hours Remaining', 'Task Status' WHERE Type = Task and Story = THIS CARD}} 


h2. Defects


{{table query: SELECT Number, Name, Owner, 'Defect Status' WHERE Type = Defect and Story = THIS CARD}}"|"Story"|""|"yes"|""|""|""|"Switch"|"yes"|"#15"|"#19"|""|""|""|""|""|""|""|"Accepted"|""
"#135"|"bz6349"|"Description: Notes:"|"Task"|""|"no"|""|""|"#102"|"Switch"|"yes"|"#15"|"#19"|""|""|""|""|""|""|""|""|"Done"
"#102"|"Bug　6349 - application error after ftp stresstesting"|"Description:This is task was replaced in done because bug 6349 changed status on 'RESOLVED WORKSFORME' Notes:"|"Task"|""|"no"|""|""|"#102"|"Switch"|"yes"|"#15"|"#19"|""|""|""|""|""|""|""|""|"Done"
"#98"|"Add files to compressed package"|"h2. Narrative


As a  I can  to DEV 7 + QA  1
Allow to add files to a compressed archive according to bz 2431*Notes for development*
- test with password protected file
- Write extra shaker tests for compress and uncompress functionality to have full coverage
- Add shaker tests for new functionality from this user story

*Notes for testing*
- check new shaker tests, test on one version of Mac and one version on Windows

h2. Related Stories


* #0


h2. Tasks


{{table query: SELECT Number, Name, Owner, 'Hours Remaining', 'Task Status' WHERE Type = Task and Story = THIS CARD}} 


h2. Defects


{{table query: SELECT Number, Name, Owner, 'Defect Status' WHERE Type = Defect and Story = THIS CARD}}"|"Story"|""|"yes"|""|""|""|"Switch"|"yes"|"#15"|"#19"|""|""|""|""|""|""|""|"Accepted"|""
"#167"|"Investigate problems with folder hierarchy"|"Description: Notes:"|"Task"|""|"no"|""|""|"#98"|"Switch"|"yes"|"#15"|"#19"|""|""|""|""|""|""|""|""|"Done"
"#168"|"Create Shaker tests"|"Description: Notes:"|"Task"|""|"no"|""|""|"#98"|"Switch"|"yes"|"#15"|"#19"|""|""|""|""|""|""|""|""|"Done"
"#166"|"Extend Swtich scripting API"|"Description:Make it possible to add/update files into existing archive Notes:"|"Task"|""|"no"|""|""|"#98"|"Switch"|"yes"|"#15"|"#19"|""|""|""|""|""|""|""|""|"Done"
"#174"|"QA - Test updated compress functionality"|"Description: Notes:"|"Task"|""|"no"|""|""|"#98"|"Switch"|"yes"|"#15"|"#19"|""|""|""|""|""|""|""|""|"Done"
"#64"|"QA Switch (basic) version features"|"h2. Narrative


As a  I can  to As a (prepress) manager on a tight budget I only want to pay for features I
actually use, i.e. Switch most basic features (+- LightSwitch), in order to get the most out of my investment.*Conversation*
Enfocus Switch contains all LightSwitch functionality but includes the following changes:
•“Log job info” element is part of the Tools category in the elements pane (instead of the Metadata category. 
Note that all 3 possible schemes are supported, this is also the case for the Sort job tool 
•“XSLT transform” element is part of the Tools category in the elements pane (instead of the Metadata category.
•“Split PDF in pages” is renamed to “Split PDF” and is available in the basic version of Switch.
•“Merge PDF pages” is renamed to “Merge PDF” and is available in the basic version of Switch.

Note: advanced performance tuning features becomes part of Switch (basic)

Note that datasets are also supported in this basic version.
E.g. ftp send can create a dataset on the data+log outgoing connection (just like in LightSwitch). If customer has Configurator module then PitStop Server configurator can create dataset with a report and if the customer also has the SwitchClient module the he can see this report in SwitchClient.

Note that private data is also supported for some tools (e.g. group and ungroup) and that the job.PrivatData variable remains part of Switch (basic) (just like in LightSwitch) 

*Acceptance criteria*
The LightSwitch tools + those mentioned above are loaded correctly

*notes for testing*
Install Switch on one version of Mac and Windows. Check if necessary tools are available and other ones are blocked

h2. Related Stories


* #0


h2. Tasks


{{table query: SELECT Number, Name, Owner, 'Hours Remaining', 'Task Status' WHERE Type = Task and Story = THIS CARD}} 


h2. Defects


{{table query: SELECT Number, Name, Owner, 'Defect Status' WHERE Type = Defect and Story = THIS CARD}}"|"Story"|""|"yes"|""|""|""|"Switch"|"yes"|"#15"|"#19"|""|""|""|""|""|""|""|"Accepted"|""
"#170"|"Test on a windows machine"|"Description:Test on a windows machine Notes:"|"Task"|""|"no"|""|""|"#64"|"Switch"|"yes"|"#15"|"#19"|""|""|""|""|""|""|""|""|"Done"
"#84"|"QA Info on missing elements"|"h2. Narrative


As a a Switch Administrator I can see to which module a tool, property editor or variable group belongs if i import a flow to know exactly what is missing and make it easy to extend Switch, buy or try  additional module*Conversation / Acceptance criteria*

When importing a flow with missing element a warning message appears mentioning 'Unsupported flow element xxx was detected when importing this flow” instead of 'Skipped unsupported flow element xxx”
Once imported and when hoovering over such element on the canvas the message still says: 'The flow element cannot be found by Switch.' (nevertheless it's a missing configurator or an unlicensed tool, we always give the same message.)

When importing a flow that uses script expression editor and scripting module is not active, the message says: 'Unsupported property editor 'define script expression' was detected when importing this flow'. 
Once imported, flow validation fails just like when importing such flow from PowerSwitch in LightSwitch

When importing a flow that uses a variable from a non supported group (i.e. metadata or database), the message says: 'Unsupported variable was detected when importing this flow'. 
Once imported, flow validation fails. Currently it is not clear to me what happens if you import such flow from PowerSwitch in LightSwitch so this behavior should be improved

*Notes for testing*
Create separate flows for each element to test flow validation and error message
Test on one version of Mac and windows

h2. Related Stories


* #0


h2. Tasks


{{table query: SELECT Number, Name, Owner, 'Hours Remaining', 'Task Status' WHERE Type = Task and Story = THIS CARD}} 


h2. Defects


{{table query: SELECT Number, Name, Owner, 'Defect Status' WHERE Type = Defect and Story = THIS CARD}}"|"Story"|""|"yes"|""|""|""|"Switch"|"yes"|"#15"|"#19"|""|""|""|""|""|""|""|"Accepted"|""
"#144"|"QA - Test Info on missing elements"|"Description: Notes:"|"Task"|""|"no"|""|""|"#84"|"Switch"|"yes"|"#15"|"#19"|""|""|""|""|""|""|""|""|"Done"
"#101"|"Preferences match my installation."|"h2. Narrative


As a a Switch Administrator I can only set preferences that are related to the modules i have to have a clear overview of relevant preferences and not be overloaded with irrelevant settingsDEV 8 + QA 1*Acceptance criteria:*
Preferences mention correct product name.

ODBC data sources is only available for the database module

Internal communication settings: Port for SwitchClient, Compress SwitchClient jobs, Max nr of mobile SwitchCients and Enable Push notifications is only available for the SwitchClient and/or SwitchClient SDK module

h2. Related Stories


* #0


h2. Tasks


{{table query: SELECT Number, Name, Owner, 'Hours Remaining', 'Task Status' WHERE Type = Task and Story = THIS CARD}} 


h2. Defects


{{table query: SELECT Number, Name, Owner, 'Defect Status' WHERE Type = Defect and Story = THIS CARD}}"|"Story"|""|"yes"|""|""|""|"Switch"|"yes"|"#15"|"#19"|""|""|""|""|""|""|""|"Accepted"|""
"#146"|"QA Test Preferences match my installation"|"Description: Notes:"|"Task"|""|"no"|""|""|"#101"|"Switch"|"yes"|"#15"|"#19"|""|""|""|""|""|""|""|""|"Done"
"#108"|"Refactoring Preferences classes"|"Description: Notes:"|"Task"|""|"no"|""|""|"#101"|"Switch"|"yes"|"#15"|"#19"|""|""|""|""|""|""|""|""|"Done"
"#161"|"Investigate problems on Lion"|"Description:Carine will add the necessary info in the task notes Notes:Kirill:
My investigation shown that Switch hung when calling to Flex service. Is reinstall will not help, let's ask Halewijn to investigate it.
Kirill:
Flex is not officially compatible with Lion, therefore we need to involve Halewijn, he might know workaround."|"Task"|""|"no"|""|""|""|"Switch"|"yes"|"#15"|"#19"|""|""|""|""|""|""|""|""|"Done"
"#163"|"add scrollbar to the label on the report page"|"Description:review messages and GUI in general 
- add scrollbar to the label on the report page 
- test upgrade from different flavors and versions 
- check upgrade starting from installer Notes:"|"Task"|""|"no"|""|""|""|"Switch"|"yes"|"#15"|"#19"|""|""|""|""|""|""|""|""|"Done"
"#221"|"Support question BGZ 6484"|"Description:Bug 6484 - how to construct a Date object from an XMP metadata value? Notes:"|"Task"|""|"no"|""|""|""|"Switch"|"yes"|"#15"|"#19"|""|""|""|""|""|""|""|""|"Done"
"#162"|"review messages and GUI in general "|"Description: Notes:"|"Task"|""|"no"|""|""|""|"Switch"|"yes"|"#15"|"#19"|""|""|""|""|""|""|""|""|"Done"
"#147"|"QA Test Upgrade"|"Description:Test upgrade from different flavors and versions:
- Running Upgrade from installer
- Running Upgrade from Designer as first run after install Notes:"|"Task"|""|"no"|""|""|""|"Switch"|"yes"|"#15"|"#19"|""|""|""|""|""|""|""|""|"Done"
"#186"|"Extra - Add event indicating that license info is changed"|"Description:Make it possible to inform all interested objects that license informaiton is changed, so Switch will be able to react on chenges fast Notes:"|"Task"|""|"no"|""|""|""|"Switch"|"yes"|"#15"|"#19"|""|""|""|""|""|""|""|""|"Done"
"#188"|"Create license validation procedure"|"Description:In Server add procedure that will check all Flow's elements and properties if they are licesensed or not Notes:"|"Task"|""|"no"|""|""|""|"Switch"|"yes"|"#15"|"#19"|""|""|""|""|""|""|""|""|"Done"
"#206"|"Support question BGZ 6331"|"Description:Bug 6331 - Persistent execution thread for 'PitStop Server' was started Notes:"|"Task"|""|"no"|""|""|""|"Switch"|"yes"|"#15"|"#19"|""|""|""|""|""|""|""|""|"Done"
"#228"|"Review - BZ 5433 - Rename file for FTP &amp; SFTP"|"Description:It is necessary to review changes done by JOPA and submit it into NetworkSupport.Main. Notes:"|"Task"|""|"no"|""|""|""|"Switch"|"yes"|"#15"|"#19"|""|""|""|""|""|""|""|""|"Done"
"#189"|"Extra - Add License Manager's event handler "|"Description:Make Switch server able to catch event sent by License Manager indicating that license information has been changed. By this event Switch will validate flows. Notes:"|"Task"|""|"no"|""|""|""|"Switch"|"yes"|"#15"|"#19"|""|""|""|""|""|""|""|""|"Done"
"#225"|"Investigate BGZ 6497"|"Description:Bug 6497 - Switch cannot start if it is launched twice

Investigate this bug to check if it is somehow related to Upgrade Notes:"|"Task"|""|"no"|""|""|""|"Switch"|"yes"|"#15"|"#19"|""|""|""|""|""|""|""|""|"Done"
"#209"|"Fix issue with ports when upgrading from Light or Full"|"Description:Default ports in Light and Full are not equal to default ports in Switch 11, so after the upgrade Switch 11 will not launch if the ports issue is not resolved. Notes:"|"Task"|""|"no"|""|""|""|"Switch"|"yes"|"#15"|"#19"|""|""|""|""|""|""|""|""|"Done"
"#210"|"10u2 remove 'beta' from version"|"Description:Bug 6473 - 10.2 builds still say BETA in version / about window

http://87.118.100.46/bugzilla/show_bug.cgi?id=6473


please fix this as this is our release branch Notes:"|"Task"|""|"no"|""|""|""|"Switch"|"yes"|"#15"|"#19"|""|""|""|""|""|""|""|""|"Done"
"#222"|"Fix problem with log messages"|"Description:There are log messages about unavailable functionality which appear during flow import in case required modules are not licensed. In some cases the messages are not complete: there is no module name mentioned in the message. The message should clearly indicate which module is required to enable the functionality.

This happens for example when importing a flow with script expression and Scripting module is missing. Notes:"|"Task"|""|"no"|""|""|""|"Switch"|"yes"|"#15"|"#19"|""|""|""|""|""|""|""|""|"Done"
"#216"|"QA Test Upgrade from Power/Full/Light 10 on Win and Mac"|"Description:During the upgrade all the data should be preserved: flows, jobs, GUI layouts, preference values Notes:"|"Task"|""|"no"|""|""|""|"Switch"|"yes"|"#15"|"#19"|""|""|""|""|""|""|""|""|"Done"
"#121"|"Shaker tests for permissions of FTP folders"|"Description: Notes:"|"Task"|""|"no"|""|""|""|"Switch"|"yes"|"#15"|"#19"|""|""|""|""|""|""|""|""|"Done"
"#184"|"Create licenses cache"|"Description:Update License Manager so license information is stored in cache, and cache will be updated by timer. Notes:"|"Task"|""|"no"|""|""|""|"Switch"|"yes"|"#15"|"#19"|""|""|""|""|""|""|""|""|"Done"
"#149"|"Support question BGZ 6413"|"Description:Bug 6413 - Adding a file to a flow changes modification date. Notes:"|"Task"|""|"no"|""|""|""|"Switch"|"yes"|"#15"|"#19"|""|""|""|""|""|""|""|""|"Done"
"#229"|"Fix Designer hunging when running it twice"|"Description: Notes:"|"Task"|""|"no"|""|""|""|"Switch"|"yes"|"#15"|"#19"|""|""|""|""|""|""|""|""|"Done"
"#148"|"Investigation BGZ 5942"|"Description:Bug 5942 - Mac aliases from mounted volumes becomes copied files Notes:"|"Task"|""|"no"|""|""|""|"Switch"|"yes"|"#15"|"#19"|""|""|""|""|""|""|""|""|"Done"
"#217"|"QA Test Upgrade when Switch data root in not in default location"|"Description:In this case the Switch data root will not be renamed or moved. During the upgrade all the data should be preserved: flows, jobs, GUI layouts, preference values Notes:"|"Task"|""|"no"|""|""|""|"Switch"|"yes"|"#15"|"#19"|""|""|""|""|""|""|""|""|"Done"
"#207"|"Verify Upgrade functionality"|"Description:- test that settings and data are correctly picked up from Power/Full/Light 09 and 10
- test Win and Mac Notes:"|"Task"|""|"no"|""|""|""|"Switch"|"yes"|"#15"|"#19"|""|""|""|""|""|""|""|""|"Done"
"#235"|"configurator review 3"|"Description: Notes:Bug 6510 - CROSSROADS: new CHILI Publish Configurator dd 2011/11/04
http://87.118.100.46/bugzilla/show_bug.cgi?id=6510"|"Task"|""|"no"|""|""|""|"Switch"|"yes"|"#15"|"#19"|""|""|""|""|""|""|""|""|"Done"
"#218"|"QA Test Upgrade on Win 7 and Lion"|"Description:Test these platforms to make sure there are no permissions issues. Notes:Bugs pointed out:

Bug 6506
Bug 6508
"|"Task"|""|"no"|""|""|""|"Switch"|"yes"|"#15"|"#19"|""|""|""|""|""|""|""|""|"Done"
"#172"|"10u2 bz 6444 ftp error Betatester"|"Description:all details available on bz.
http://87.118.100.46/bugzilla/show_bug.cgi?id=6444

let me know If I should ask the customer more question. Notes:"|"Task"|""|"no"|""|""|""|"Switch"|"yes"|"#15"|"#19"|""|""|""|""|""|""|""|""|"Done"
"#215"|"QA Test Upgrade from Power/Full/Light 09 on Mac and Win"|"Description:During the upgrade all the data should be preserved: flows, jobs, GUI layouts, preference values Notes:"|"Task"|""|"no"|""|""|""|"Switch"|"yes"|"#15"|"#19"|""|""|""|""|""|""|""|""|"Done"
"#226"|"Question about getting flow status from Server"|"Description:The question from the customer about possible ways to get information about flow status from Server Notes:"|"Task"|""|"no"|""|""|""|"Switch"|"yes"|"#15"|"#19"|""|""|""|""|""|""|""|""|"Done"
"#230"|"Fix problem with security of Designer SOAP API"|"Description: Notes:"|"Task"|""|"no"|""|""|""|"Switch"|"yes"|"#15"|"#19"|""|""|""|""|""|""|""|""|"Done"
"#185"|"Add flag indicating that license info has been changed"|"Description:Make it possible to check is licenses changed to avoid unnecessary checks Notes:"|"Task"|""|"no"|""|""|""|"Switch"|"yes"|"#15"|"#19"|""|""|""|""|""|""|""|""|"Done"
"#175"|"10u2 Translations"|"Description:The strings that were not translated yet are sent to the translation agency. Once we get the translated strings back we need to put them in the software. 

Update: we got the translations back today. I have sent all info to Kirill.  Notes:"|"Task"|""|"no"|""|""|""|"Switch"|"yes"|"#15"|"#19"|""|""|""|""|""|""|""|""|"Done"
"#214"|"Refresh cache after activation or deactivation via Designer GUI"|"Description:The cache can be refreshed immediately after activation/deactivation/repair was performed via Designer GUI. In this case Designer can send a request to Server to refresh the cache. Notes:"|"Task"|""|"no"|""|""|""|"Switch"|"yes"|"#15"|"#19"|""|""|""|""|""|""|""|""|"Done"
"#220"|"Fix problem that wizard window appears in background on Mac"|"Description: Notes:"|"Task"|""|"no"|""|""|""|"Switch"|"yes"|"#15"|"#19"|""|""|""|""|""|""|""|""|"Done"
"#223"|"Bugfix for BGZ 6398"|"Description:Bug 6398 - 'Can't lock user global data' error in Assemble Tool Notes:"|"Task"|""|"no"|""|""|""|"Switch"|"yes"|"#15"|"#19"|""|""|""|""|""|""|""|""|"Done"
"#20"|"Generated Sprint-20"|""|"Sprint"|""|"no"|""|""|""|""|"yes"|"#15"|""|""|""|""|""|""|"2011-11-06 23:00:00.0"|"2011-11-19 23:00:00.0"|""|""
"#21"|"Module license expires"|"h2. Narrative


As a a Switch administrator / prepress manager I can not use features and tools that are not longer licensed to not break my license agreement20 DEV +1 QA

For DEV 6 points still remaining*Conversation:*
We need a mechanism to prevent Switch running with unlicensed features. 

*Acceptance criteria:*
use case: database module trial expires.
1) before Switch service is restarted:
Flows can still be imported without missing element notification and flows can still be created because the database element is still in the elements pane. These flows can however not be validated anymore and the unlicensed tool gets the exclamation mark and message 'Invalid license'.

Flows that are running on the moment license expires keep running. There is however a daily check (every 24h). After this check -the flow keeps running but the unlicensed element or the element that uses some database variable (or in case of metadata module uses a script expression property editor) is market as a problem element. Jobs arriving at such element go to the problem jobs.-
*UPDATE: The flow does not keep running and we do not mark the element as a problem element. we just DEACTIVATE the whole flow. There should be a clear log message explaining which flow element is not functional anymore and which module is required to make it functional again* 

2) after the service is restarted:
The elements or features are not available in GUI anymore so customer cannot create flows with them anymore. When importing flows we indicate that features or elements are missing. 
Also existing flows will indicate missing elements. 
No flow can be activated anymore because validation will fail on missing features.

*Notes for testing*
Use time bombed key or trial key. 
one version on mac and windows

h2. Related Stories


* #0


h2. Tasks


{{table query: SELECT Number, Name, Owner, 'Hours Remaining', 'Task Status' WHERE Type = Task and Story = THIS CARD}} 


h2. Defects


{{table query: SELECT Number, Name, Owner, 'Defect Status' WHERE Type = Defect and Story = THIS CARD}}"|"Story"|""|"yes"|""|""|""|"Switch"|"yes"|"#15"|"#20"|""|""|""|""|""|""|""|"Accepted"|""
"#190"|"QA - check that Switch reacts on expires licenses"|"Description:Do the following tests:
- Check that after Server restart expired elements are missed in Elements pane and marked on canvas
- Check that Switch fails expired elements in the running flows
- Check that it is possible to import/create flow with expired elements in case Switch has not been restarted
- Check that it is impossible to import/create flow with expired elements in case Switch has been restarted
 Notes:"|"Task"|""|"no"|""|""|"#21"|"Switch"|"yes"|"#15"|"#20"|""|""|""|""|""|""|""|""|"Done"
"#250"|"Crash in SwitchScripter"|"Description:The crash appeared after license cache was implemented. To reproduce:
- start SwitchScripter
- add one test file in Fixture pane
- click to browse for a file path -&gt; the crash

According to the callstack the crash happens because of null pointer in the license cache functionality Notes:"|"Task"|""|"no"|""|""|"#21"|"Switch"|"yes"|"#15"|"#20"|""|""|""|""|""|""|""|""|"Done"
"#187"|"Update Flow manager so it check flow's elements validity"|"Description:Let Switch server check all running flows by timer - license state of used elements/properties should be checked Notes:"|"Task"|""|"no"|""|""|"#21"|"Switch"|"yes"|"#15"|"#20"|""|""|""|""|""|""|""|""|"Done"
"#129"|"Spike - Switch on Lion"|"h2. Narrative


As a a system administrator I can run Switch on Lion to use the benefits of new mac hardware (that by default comes with Lion)*Conversation:*
Investigate what it would take to run Switch on Lion.
Estimate the effort is we at least find a solution.

*Acceptance criteria*
After this story we should know exactly if we can fix the problems on Lion and which fixes we need to do to fully support Lion.

h2. Related Stories


* #0


h2. Tasks


{{table query: SELECT Number, Name, Owner, 'Hours Remaining', 'Task Status' WHERE Type = Task and Story = THIS CARD}} 


h2. Defects


{{table query: SELECT Number, Name, Owner, 'Defect Status' WHERE Type = Defect and Story = THIS CARD}}"|"Story"|""|"yes"|""|""|""|"Switch"|"yes"|"#15"|"#20"|""|""|""|""|""|""|""|"Accepted"|""
"#246"|"Investigate how to store global data on Lion"|"Description: Notes:"|"Task"|""|"no"|""|""|"#129"|"Switch"|"yes"|"#15"|"#20"|""|""|""|""|""|""|""|""|"Done"
"#247"|"Investigate is it possible to workaround the problem via Qt "|"Description: Notes:"|"Task"|""|"no"|""|""|"#129"|"Switch"|"yes"|"#15"|"#20"|""|""|""|""|""|""|""|""|"Done"
"#66"|"QA SwitchProxy module"|"h2. Narrative


As a  I can  to As a (prepress) manager on a tight budget I only want to pay for features I
actually use, i.e. SwitchProxy module, in order to get the most out of my
investment.

*Conversation*
The SwitchProxy module is separate product and released with Switch 10 but from
Switch 11 on it will be “commercially” considered as a module.
No development effort required, just writing this story for completeness and to
make sure it gets tested by QA 

*Acceptance criteria*
SwitchProxy works fine with Switch 11

*extra notes for testing*
Check if possible to connect and submit file through proxy.
Test on Mac and Windows. 

h2. Related Stories


* #0


h2. Tasks


{{table query: SELECT Number, Name, Owner, 'Hours Remaining', 'Task Status' WHERE Type = Task and Story = THIS CARD}} 


h2. Defects


{{table query: SELECT Number, Name, Owner, 'Defect Status' WHERE Type = Defect and Story = THIS CARD}}"|"Story"|""|"yes"|""|""|""|"Switch"|"yes"|"#15"|"#20"|""|""|""|""|""|""|""|"Accepted"|""
"#237"|"MAc QA SwitchProxy module"|"Description:Check if possible to connect and submit file through proxy on Mac. Notes:"|"Task"|""|"no"|""|""|"#66"|"Switch"|"yes"|"#15"|"#20"|""|""|""|""|""|""|""|""|"Done"
"#238"|"PC QA SwitchProxy module"|"Description:Check if possible to connect and submit file through proxy on a windows computer. Notes:"|"Task"|""|"no"|""|""|"#66"|"Switch"|"yes"|"#15"|"#20"|""|""|""|""|""|""|""|""|"Done"
"#121"|"Spike PitStop Pro is a SwitchClient"|"h2. Narrative


As a a prepress operator I can submit files straight from Acrobat (PitStop Pro) into Switch to streamline the production workflow and fasten up processing because i don't have to switch anymore from Acrobat to SwitchClient and vice versaQA 0 + Dev 4*Conversation:*
PitStop Pro 11 will become a SwitchClient. *Acting like a regular Client*, a connection license will be taken. So not like PitStop Connect or instant PDF, those do not take a connection license
Next to making sure Switch can handle communication with this new client we also need to do some refactoring to make the Acrobat plug-in. There fore we'll need to:

Factor out connection pane (not dialog, just the pane, no business logic) to be reused in PitStop Preferences window

Factor out “Discover” functionality

Allow a PitStop Pro SwitchClient ID in Switch as a regular client connection

Factor out SwitchClient business logic to a shared layer

Factor out SwitchClient UI and business logic for “Submit File” and “Enter Metadata”

Factor out SwitchClient UI and business logic for “Submit to checkpoint”.  For the UI we only want to reuse the list of outgoing connections.

Factor out SwitchClient UI and business logic for creating Job filters

Factor out SwitchClient business logic for applying a filter on a list of Jobs

h2. Related Stories


* #0


h2. Tasks


{{table query: SELECT Number, Name, Owner, 'Hours Remaining', 'Task Status' WHERE Type = Task and Story = THIS CARD}} 


h2. Defects


{{table query: SELECT Number, Name, Owner, 'Defect Status' WHERE Type = Defect and Story = THIS CARD}}"|"Story"|""|"yes"|""|""|""|"Switch"|"yes"|"#15"|"#20"|""|""|""|""|""|""|""|"Accepted"|""
"#253"|"Get details about integration with PitStop Pro"|"Description: Notes:"|"Task"|""|"no"|""|""|"#121"|"Switch"|"yes"|"#15"|"#20"|""|""|""|""|""|""|""|""|"Done"
"#254"|"Review code and make estimations"|"Description: Notes:"|"Task"|""|"no"|""|""|"#121"|"Switch"|"yes"|"#15"|"#20"|""|""|""|""|""|""|""|""|"Done"
"#73"|"QA Database module"|"h2. Narrative


As a  I can  to As a (prepress) manager on a tight budget I only want to pay for features I
actually use, i.e. Database tool, access to the database variables and
possibility to gather content for a SwitchClient dropdown list straight from a
database, in order to get the most out of my investment.

*Conversation*
•The Database connect element
•The database variables 
•And access to ODBC data sources when defining dropdown list as metadata fields
on Submit and Checkpoints 
Should be licensed separately from Switch. Meaning that only when I use a valid
key, this flow element and its new category title (Database) become available
in the elements pane, the database group becomes available in the variables
panel (i.e. define single/ multi line or condition with variables dialog) and
“Define values from ODBC data source” becomes available as data value for
dropdown list.

The key can either be a permanent or trial key. Both keys have the same result,
however a trial key is time bombed so when it expires, functionality cannot be
used anymore. Same thing when you deactivate a key.

*Acceptance criteria*
This feature was already implemented in Switch 10 update 1. Only thing that
needs to be taken care of is that the Database connect elements appears in it’s
own category instead of being part of the metadata category.

*Notes for testing*
Story is only about configurator in right category
test on Mac and Windows


h2. Related Stories


* #0


h2. Tasks


{{table query: SELECT Number, Name, Owner, 'Hours Remaining', 'Task Status' WHERE Type = Task and Story = THIS CARD}} 


h2. Defects


{{table query: SELECT Number, Name, Owner, 'Defect Status' WHERE Type = Defect and Story = THIS CARD}}"|"Story"|""|"yes"|""|""|""|"Switch"|"yes"|"#15"|"#20"|""|""|""|""|""|""|""|"Accepted"|""
"#244"|"Mac QA Database module"|"Description:Test on Mac

Conversation

•The Database connect element
•The database variables 
•And access to ODBC data sources when defining dropdown list as metadata fields
on Submit and Checkpoints 
Should be licensed separately from Switch. Meaning that only when I use a valid
key, this flow element and its new category title (Database) become available
in the elements pane, the database group becomes available in the variables
panel (i.e. define single/ multi line or condition with variables dialog) and
“Define values from ODBC data source” becomes available as data value for
dropdown list.
The key can either be a permanent or trial key. Both keys have the same result,
however a trial key is time bombed so when it expires, functionality cannot be
used anymore. Same thing when you deactivate a key

Acceptance criteria

This feature was already implemented in Switch 10 update 1. Only thing that
needs to be taken care of is that the Database connect elements appears in it’s
own category instead of being part of the metadata category. Notes:"|"Task"|""|"no"|""|""|"#73"|"Switch"|"yes"|"#15"|"#20"|""|""|""|""|""|""|""|""|"Done"
"#245"|"PC QA Database module"|"Description:Conversation

•The Database connect element
•The database variables 
•And access to ODBC data sources when defining dropdown list as metadata fields
on Submit and Checkpoints 
Should be licensed separately from Switch. Meaning that only when I use a valid
key, this flow element and its new category title (Database) become available
in the elements pane, the database group becomes available in the variables
panel (i.e. define single/ multi line or condition with variables dialog) and
“Define values from ODBC data source” becomes available as data value for
dropdown list.
The key can either be a permanent or trial key. Both keys have the same result,
however a trial key is time bombed so when it expires, functionality cannot be
used anymore. Same thing when you deactivate a key.


Acceptance criteria

This feature was already implemented in Switch 10 update 1. Only thing that
needs to be taken care of is that the Database connect elements appears in it’s
own category instead of being part of the metadata category.


Notes for testing

Story is only about configurator in right category Notes:"|"Task"|""|"no"|""|""|"#73"|"Switch"|"yes"|"#15"|"#20"|""|""|""|""|""|""|""|""|"Done"
"#100"|"Upgrade"|"h2. Narrative


As a an operator I can easily upgrade my old Switch 09 or Switch 10 to Switch 11  to start production again right away with the new version, without having to worry  loosing data or settingsDEV 20 + QA 8

Only part remaining is about removing previous version. For DEV 8 points still remaining. For QA 2 points still remaining*Conversation'*
Any Switch flavor should be easily upgraded to the new modular Switch.
Therefore we have a conditional license feature checking.
Note that we only need to support upgrade from 09 or 10.

*Acceptance criteria:*
Upgrading is like it used to be (e.g. from 09 to 10) meaning all flows, preferences, settings are preserved and the old version is removed.

In case 2 switch flavors are found on the same system. The user will get notification and must decide which version he wishes to update at first start-up of Switch 11.

*notes for testing*
* test upgrade from power, light, full for 09u3 and 10u2 to Switch 11 on one version of SnowLeopard/Leopard and windows XP/Vista
* power-&gt;Switch on windows 2008 Server R2, XP, SnowLeopard 
* full-&gt;Switch on Lion, Leopard
* Light-&gt;Switch on Windows 7, 2003 Server

h2. Related Stories


* #0


h2. Tasks


{{table query: SELECT Number, Name, Owner, 'Hours Remaining', 'Task Status' WHERE Type = Task and Story = THIS CARD}} 


h2. Defects


{{table query: SELECT Number, Name, Owner, 'Defect Status' WHERE Type = Defect and Story = THIS CARD}}"|"Story"|""|"yes"|""|""|""|"Switch"|"yes"|"#15"|"#20"|""|""|""|""|""|""|""|"Accepted"|""
"#248"|"Uninstall previous versions on Mac"|"Description:Installer of Switch 11 should automatically uninstall Switch 09 and 10 Notes:"|"Task"|""|"no"|""|""|"#100"|"Switch"|"yes"|"#15"|"#20"|""|""|""|""|""|""|""|""|"Done"
"#268"|"QA - Uninstall previous Switch versions on Windows7"|"Description:When Switch11 is being installed, it should uninstall all Switch9/10 flavors on Widows7 Notes:"|"Task"|""|"no"|""|""|"#100"|"Switch"|"yes"|"#15"|"#20"|""|""|""|""|""|""|""|""|"Done"
"#272"|"Fix Upgrade Wizard on Win 7"|"Description:There is the problem on Win 7 that Designer cannot start the Wizard. This is most likely because of permissions problem: Wizard requires higher privileges then Designer Notes:"|"Task"|""|"no"|""|""|"#100"|"Switch"|"yes"|"#15"|"#20"|""|""|""|""|""|""|""|""|"Done"
"#274"|"QA - Test Upgrade on Lion"|"Description:Lion has special lockfiles for permissions which can influence on Upgrade Notes:"|"Task"|""|"no"|""|""|"#100"|"Switch"|"yes"|"#15"|"#20"|""|""|""|""|""|""|""|""|"Done"
"#251"|"Fix for BGZ 6511"|"Description:Bug 6511 - SwitchUpgradeApp.exe doesn't detect that upgrade has already been carried out  Notes:"|"Task"|""|"no"|""|""|"#100"|"Switch"|"yes"|"#15"|"#20"|""|""|""|""|""|""|""|""|"Done"
"#232"|"Uninstall previous Switch versions on Win"|"Description:Installer of Switch 11 should automatically uninstall Switch 09 and 10 Notes:"|"Task"|""|"no"|""|""|"#100"|"Switch"|"yes"|"#15"|"#20"|""|""|""|""|""|""|""|""|"Done"
"#269"|"QA - Uninstall previous Switch versions on Mac"|"Description:When Switch11 is being installed, it should uninstall all Switch9/10 flavors on Snow Leopard Notes:"|"Task"|""|"no"|""|""|"#100"|"Switch"|"yes"|"#15"|"#20"|""|""|""|""|""|""|""|""|"Done"
"#270"|"QA  -  Bug 6511"|"Description:To verify bug 6511 on Mac (if possible) and Windows. Notes:"|"Task"|""|"no"|""|""|"#100"|"Switch"|"yes"|"#15"|"#20"|""|""|""|""|""|""|""|""|"Done"
"#219"|"QA Test Upgrade features"|"Description:To test:
- see notes for testing from the User story description
- test that upgrade is performed only once on given system
- test that upgrade is not performed the second time if the Upgrade wizard is started manually
- check Wizard GUI and messages Notes:"|"Task"|""|"no"|""|""|"#100"|"Switch"|"yes"|"#15"|"#20"|""|""|""|""|""|""|""|""|"Done"
"#67"|"QA Client SDK module"|"h2. Narrative


As a  I can  to As a (prepress) manager on a tight budget I don’t want to pay twice for the
same features, so when I have purchased the Client SDK module I need the
SwitchClient module included. 

*Conversation*
The Client SDK is already a separate module (with its own license key) and
released with Switch 10 but from Switch 11 on it will be “commercially”
considered as a module.
Whoever buys this module is automatically entitled to use the SwitchClient
module. 

*Acceptance criteria*
Using only 1 key, the one for Client SDK, the same features and connection
rights as in the SwitchClient module become available.
Note that in such case the customer does not get separate keys for Client SDK
and SwitchClient module.

*Notes for testing*
test with Switch Client, iPad Client, Switch Proxy, sample from Client SDK
test on Mac and windows. 



h2. Related Stories


* #0


h2. Tasks


{{table query: SELECT Number, Name, Owner, 'Hours Remaining', 'Task Status' WHERE Type = Task and Story = THIS CARD}} 


h2. Defects


{{table query: SELECT Number, Name, Owner, 'Defect Status' WHERE Type = Defect and Story = THIS CARD}}"|"Story"|""|"yes"|""|""|""|"Switch"|"yes"|"#15"|"#20"|""|""|""|""|""|""|""|"Accepted"|""
"#242"|"PC QA Client SDK module"|"Description:test with Switch Client, Switch Proxy, sample from Client SDK on a windows.

Conversation

The Client SDK is already a separate module (with its own license key) and
released with Switch 10 but from Switch 11 on it will be “commercially”
considered as a module.
Whoever buys this module is automatically entitled to use the SwitchClient module.

Acceptance criteria

Using only 1 key, the one for Client SDK, the same features and connection
rights as in the SwitchClient module become available.
Note that in such case the customer does not get separate keys for Client SDK
and SwitchClient module. Notes:"|"Task"|""|"no"|""|""|"#67"|"Switch"|"yes"|"#15"|"#20"|""|""|""|""|""|""|""|""|"Done"
"#243"|"iPad 	QA Client SDK module"|"Description:Test on iPad Client.

Conversation

The Client SDK is already a separate module (with its own license key) and
released with Switch 10 but from Switch 11 on it will be “commercially”
considered as a module.
Whoever buys this module is automatically entitled to use the SwitchClient
module.

Acceptance criteria

Using only 1 key, the one for Client SDK, the same features and connection
rights as in the SwitchClient module become available.
Note that in such case the customer does not get separate keys for Client SDK
and SwitchClient module. Notes:"|"Task"|""|"no"|""|""|"#67"|"Switch"|"yes"|"#15"|"#20"|""|""|""|""|""|""|""|""|"Done"
"#241"|"Mac QA Client SDK module"|"Description:test with Switch Client, Switch Proxy, sample from Client SDK on a mac

Conversation
The Client SDK is already a separate module (with its own license key) and
released with Switch 10 but from Switch 11 on it will be “commercially”
considered as a module.
Whoever buys this module is automatically entitled to use the SwitchClient
module.
Acceptance criteria
Using only 1 key, the one for Client SDK, the same features and connection
rights as in the SwitchClient module become available.
Note that in such case the customer does not get separate keys for Client SDK
and SwitchClient module. Notes:"|"Task"|""|"no"|""|""|"#67"|"Switch"|"yes"|"#15"|"#20"|""|""|""|""|""|""|""|""|"Done"
"#128"|"10u2 Shaker tests for FTP_1"|"h2. Narrative


As a  I can  to DEV 5 + 2 QA

For the moment I am extending shaker to make it possible to run the same Shaker tests for different FTP servers without having to duplicate the tests/flows.

Because FTP is so important for update 2 I suggest that we also add an extra story for the next sprint to create the necessary feature and regression tests for FTP. This means making tests for all different properties of the FTP receive and send + extra tests for special cases like permissions or special file names.   
The tests can already be created for one FTP server. Once I am ready with my extension we can change the tests to run them for all available FTP servers that we have internally.

Acceptance criteria: Show tests that were created and that they run on the server that is setup in Minsk

Will be tested automatically with Shaker as Shaker tests are now failing on this

h2. Related Stories


* #0


h2. Tasks


{{table query: SELECT Number, Name, Owner, 'Hours Remaining', 'Task Status' WHERE Type = Task and Story = THIS CARD}} 


h2. Defects


{{table query: SELECT Number, Name, Owner, 'Defect Status' WHERE Type = Defect and Story = THIS CARD}}"|"Story"|""|"yes"|""|""|""|"Switch"|"yes"|"#15"|"#20"|""|""|""|""|""|""|""|"Accepted"|""
"#236"|"Bugfix bgz 6410 QA"|"Description:Bugfix bgz 6410 - 'FTP Receive' - zero length resource fork file created on windows.
http://87.118.100.46/bugzilla/show_bug.cgi?id=6410 Notes:"|"Task"|""|"no"|""|""|"#128"|"Switch"|"yes"|"#15"|"#20"|""|""|""|""|""|""|""|""|"Done"
"#266"|"Modifications in FTP Shaker tests according to fixed BGZ 6410"|"Description: Notes:"|"Task"|""|"no"|""|""|"#128"|"Switch"|"yes"|"#15"|"#20"|""|""|""|""|""|""|""|""|"Done"
"#143"|"Bugfix bgz 6410"|"Description:Bugfix bgz 6410 - 'FTP Receive' - zero length resource fork file created on windows.
http://87.118.100.46/bugzilla/show_bug.cgi?id=6410 Notes:"|"Task"|""|"no"|""|""|"#128"|"Switch"|"yes"|"#15"|"#20"|""|""|""|""|""|""|""|""|"Done"
"#70"|"QA Scripting module"|"h2. Narrative


As a  I can  to As a (prepress) manager on a tight budget I only want to pay for features I
actually use, i.e. Scripting, in order to get the most out of my investment.

*Conversation*
The script element and property editor “Define script expression” should be
licensed separately from Switch. Meaning that only when I use a valid key, this
flow element and its category title (Scripting) become available in the
elements pane and the script expression property editor becomes available in
the properties pane.
The key can either be a permanent or trial key. Both keys have the same result,
however a trial key is time bombed so when it expires, functionality cannot be
used anymore. Same thing when you deactivate a key.

*Acceptance criteria*
Make the script element and features behave like the Database connect tool in
PowerSwitch 10 update1. Meaning that only when it is licensed (separately from
PowerSwitch), it can be used.
Make sure the property editor “Define script expression” is only available if
correctly licensed with a scripting module key.

*notes for testing*
Will be tested with correct keys for the scripting Module
Need to be check if the scripting features are enabled/disabled when key is (de)activated.
Test on Mac and Windows, one version

h2. Related Stories


* #0


h2. Tasks


{{table query: SELECT Number, Name, Owner, 'Hours Remaining', 'Task Status' WHERE Type = Task and Story = THIS CARD}} 


h2. Defects


{{table query: SELECT Number, Name, Owner, 'Defect Status' WHERE Type = Defect and Story = THIS CARD}}"|"Story"|""|"yes"|""|""|""|"Switch"|"yes"|"#15"|"#20"|""|""|""|""|""|""|""|"Accepted"|""
"#240"|"PC QA Scripting module"|"Description:Conversation
The script element and property editor “Define script expression” should be
licensed separately from Switch. Meaning that only when I use a valid key, this
flow element and its category title (Scripting) become available in the
elements pane and the script expression property editor becomes available in
the properties pane.
The key can either be a permanent or trial key. Both keys have the same result,
however a trial key is time bombed so when it expires, functionality cannot be
used anymore. Same thing when you deactivate a key.
Acceptance criteria
Make the script element and features behave like the Database connect tool in
PowerSwitch 10 update1. Meaning that only when it is licensed (separately from
PowerSwitch), it can be used.
Make sure the property editor “Define script expression” is only available if
correctly licensed with a scripting module key.
notes for testing
Will be tested with correct keys for the scripting Module
Need to be check if the scripting features are enabled/disabled when key is (de)activated.
Test on  Windows Notes:"|"Task"|""|"no"|""|""|"#70"|"Switch"|"yes"|"#15"|"#20"|""|""|""|""|""|""|""|""|"Done"
"#239"|"Mac QA Scripting module"|"Description:Conversation
The script element and property editor “Define script expression” should be
licensed separately from Switch. Meaning that only when I use a valid key, this
flow element and its category title (Scripting) become available in the
elements pane and the script expression property editor becomes available in
the properties pane.
The key can either be a permanent or trial key. Both keys have the same result,
however a trial key is time bombed so when it expires, functionality cannot be
used anymore. Same thing when you deactivate a key.
Acceptance criteria
Make the script element and features behave like the Database connect tool in
PowerSwitch 10 update1. Meaning that only when it is licensed (separately from
PowerSwitch), it can be used.
Make sure the property editor “Define script expression” is only available if
correctly licensed with a scripting module key.
notes for testing
Will be tested with correct keys for the scripting Module
Need to be check if the scripting features are enabled/disabled when key is (de)activated.
Test on Mac Notes:"|"Task"|""|"no"|""|""|"#70"|"Switch"|"yes"|"#15"|"#20"|""|""|""|""|""|""|""|""|"Done"
"#256"|"Add warning about 30 and less days of maintanance"|"Description: Notes:"|"Task"|""|"no"|""|""|""|"Switch"|"yes"|"#15"|"#20"|""|""|""|""|""|""|""|""|"Done"
"#260"|"Create Dialog"|"Description:Using QT Designer Notes:"|"Task"|""|"no"|""|""|""|"Switch"|"yes"|"#15"|"#20"|""|""|""|""|""|""|""|""|"Done"
"#259"|"Decide where to place License Panel"|"Description:Probably AboutLayer???

Create template list of icons Notes:"|"Task"|""|"no"|""|""|""|"Switch"|"yes"|"#15"|"#20"|""|""|""|""|""|""|""|""|"Done"
"#271"|"Support question BGZ 6417"|"Description:Bug 6417 - Jobs stay in the active list even though they are gone Notes:"|"Task"|""|"no"|""|""|""|"Switch"|"yes"|"#15"|"#20"|""|""|""|""|""|""|""|""|"Done"
"#276"|"Read license info and prepare data for License Pane"|"Description: Notes:"|"Task"|""|"no"|""|""|""|"Switch"|"yes"|"#15"|"#20"|""|""|""|""|""|""|""|""|"Done"
"#258"|"Prepare logic for abstracting License Panel from Switch"|"Description:Pass there list of modules with corresponding features list Notes:"|"Task"|""|"no"|""|""|""|"Switch"|"yes"|"#15"|"#20"|""|""|""|""|""|""|""|""|"Done"
"#286"|"Support issue BGZ 6543"|"Description:Bug 6543 - To many script executors started Notes:"|"Task"|""|"no"|""|""|""|"Switch"|"yes"|"#15"|"#20"|""|""|""|""|""|""|""|""|"Done"
"#267"|"callas configurator diff"|"Description:compare callas configurators Notes:apparently 2 different configurator ID's are used for callas configurators. (one has enfocus in it, the other one has callassoftware in it)
Both configurators are circulating so one must disappear. Please start with checking if the 2 (actually 2x5) configurators are unique (except for the ID of course)"|"Task"|""|"no"|""|""|""|"Switch"|"yes"|"#15"|"#20"|""|""|""|""|""|""|""|""|"Done"
"#257"|"Add Maintenance expired error"|"Description: Notes:"|"Task"|""|"no"|""|""|""|"Switch"|"yes"|"#15"|"#20"|""|""|""|""|""|""|""|""|"Done"
"#234"|"configurator review Elvis"|"Description: Notes:Bug 6496 - CROSSROADS: new Elvis Send and Receive Configurators dd 2011-11-02 
http://87.118.100.46/bugzilla/show_bug.cgi?id=6496"|"Task"|""|"no"|""|""|""|"Switch"|"yes"|"#15"|"#20"|""|""|""|""|""|""|""|""|"Done"
"#279"|"Show Maintenance key in About panel"|"Description: Notes:"|"Task"|""|"no"|""|""|""|"Switch"|"yes"|"#15"|"#20"|""|""|""|""|""|""|""|""|"Done"
"#233"|"Configurator review Callas"|"Description: Notes:review configurator 
Bug 6486 - CROSSROADS: new callas configurator dd 2011-10-31
http://87.118.100.46/bugzilla/show_bug.cgi?id=6486"|"Task"|""|"no"|""|""|""|"Switch"|"yes"|"#15"|"#20"|""|""|""|""|""|""|""|""|"Done"
"#249"|"Uncompress problem for BGZ 6105"|"Description:Bug 6105 - Replace tags in word document  Notes:"|"Task"|""|"no"|""|""|""|"Switch"|"yes"|"#15"|"#20"|""|""|""|""|""|""|""|""|"Done"
"#278"|"Investigate where/how to get end date in switch maintenance feature"|"Description: Notes:"|"Task"|""|"no"|""|""|""|"Switch"|"yes"|"#15"|"#20"|""|""|""|""|""|""|""|""|"Done"
"#275"|"Support question BGZ 6489"|"Description:Bug 6489 - Assemble job reports User name is Empty Warning Notes:"|"Task"|""|"no"|""|""|""|"Switch"|"yes"|"#15"|"#20"|""|""|""|""|""|""|""|""|"Done"
"#262"|"Add logic for buttons"|"Description:Deactivate
Trial
Repair
New lic Notes:"|"Task"|""|"no"|""|""|""|"Switch"|"yes"|"#15"|"#20"|""|""|""|""|""|""|""|""|"Done"
"#97"|"Fix randomly failing Shaker tests"|"Description:Some tests are still failing randomly on the virtual machine where Shaker is running (see notes). I have created a separate task to fix the 'MergePDF_Metadata' test. Please investigate what the problem is for the other failing tests and try to fix it. 

You can access the virtual machine through remote desktop:
Address = 10.13.133.79
Username = Shaker
Password = 123

There is already a Switch installed. You can find TestDrive and the Shaker tests on the desktop. Let me know if you have any questions or problems. I will temporarily disable cruisecontrol until you are ready with your investigations, please let me know when I should enable cruisecontrol again.
I will add an extra task to the icescrum taskboard to investigate this further.
In the mean time I will start investigating why not everybody is receiving the mails about failing tests. Notes:"|"Task"|""|"no"|""|""|""|"Switch"|"yes"|"#15"|"#20"|""|""|""|""|""|""|""|""|"Done"
"#277"|"Integrate logic with UI"|"Description: Notes:"|"Task"|""|"no"|""|""|""|"Switch"|"yes"|"#15"|"#20"|""|""|""|""|""|""|""|""|"Done"
"#283"|"QA test maintenance on mac osX"|"Description: Notes:"|"Task"|""|"no"|""|""|""|"Switch"|"yes"|"#15"|"#20"|""|""|""|""|""|""|""|""|"Done"
"#281"|"Implement multiple selection functionality"|"Description: Notes:"|"Task"|""|"no"|""|""|""|"Switch"|"yes"|"#15"|"#20"|""|""|""|""|""|""|""|""|"Done"
"#261"|"Create License Info Widget"|"Description: Notes:"|"Task"|""|"no"|""|""|""|"Switch"|"yes"|"#15"|"#20"|""|""|""|""|""|""|""|""|"Done"
"#255"|"Update License Manager so expiration date is taked into account"|"Description: Notes:"|"Task"|""|"no"|""|""|""|"Switch"|"yes"|"#15"|"#20"|""|""|""|""|""|""|""|""|"Done"
"#21"|"Generated Sprint-21"|""|"Sprint"|""|"no"|""|""|""|""|"yes"|"#15"|""|""|""|""|""|""|"2011-11-20 23:00:00.0"|"2011-12-03 23:00:00.0"|""|""
"#151"|"Document refactoring work for PitStop Pro integration"|"h2. Narrative


As a  I can  to Create a document describing the refactoring that we would like to do to integrate PitStop Pro with Switch.
The goal is that we describe as much as possible what was found and discussed during the spike in the previous sprint.
This document will be used to further discuss the refactoring between Ghent and Minsk.


h2. Related Stories


* #0


h2. Tasks


{{table query: SELECT Number, Name, Owner, 'Hours Remaining', 'Task Status' WHERE Type = Task and Story = THIS CARD}} 


h2. Defects


{{table query: SELECT Number, Name, Owner, 'Defect Status' WHERE Type = Defect and Story = THIS CARD}}"|"Story"|""|"yes"|""|""|""|"Switch"|"yes"|"#15"|"#21"|""|""|""|""|""|""|""|"Accepted"|""
"#291"|"Create document"|"Description: Notes:"|"Task"|""|"no"|""|""|"#151"|"Switch"|"yes"|"#15"|"#21"|""|""|""|""|""|""|""|""|"Done"
"#292"|"Review document"|"Description: Notes:"|"Task"|""|"no"|""|""|"#151"|"Switch"|"yes"|"#15"|"#21"|""|""|""|""|""|""|""|""|"Done"
"#94"|"Use FlexNet 11.10"|"h2. Narrative


As a  I can  to DEV 2 + QA 5
We need to use FlexNet 11.10 for Switch 11 as this is the only version for which Flexera offers limited support on Lion

According to the latest info from Flex we should not start building on Lion until Flex officially supports this:
'FlexEnabled component built with the FlexNet Publisher version 11.10 toolkit is supported for running on the Mac OS X Lion operating system subject to the following limitations: The Toolkit must be built on Mac OS X Snow Leopard or below, on a support Mac platform as listed in the FlexNet Publisher 11.10 Release Notes.'
===========================================================================================================
Notes for development:
try to build after switching and do one activation/deactivation on both mac and windows before submitting

Notes for testing:
As we switch to a new version of FlexNet we might have to completely retest activation itself on different OS versions and platforms. It is not necessary to retest the whole modules mechanism by checking each individual place where a module is used. To be evaluated if QA needs the help of development to test this on different versions.

* have to test on both Windows and Mac: test on Lion and (Snow)Leopard + 2008 R2 and Windows 7.
* different kind of keys: NFR, Commercial, trial keys. Upgrade and Full keys. 
* activating/deactivating, online/offline.
* upgrade from one flavor of Switch 09 and Switch 10 to Switch 11 + clean install of Switch 11.

Important Note!!! Please test if the problems described on https://wiki.esko.com/display/Enfocus/Switch+on+Lion are still reproducible with Flex 11.10. If we can reproduce them, we should try to get a callstack and send all necessary info to Flexera.

h2. Related Stories


* #0


h2. Tasks


{{table query: SELECT Number, Name, Owner, 'Hours Remaining', 'Task Status' WHERE Type = Task and Story = THIS CARD}} 


h2. Defects


{{table query: SELECT Number, Name, Owner, 'Defect Status' WHERE Type = Defect and Story = THIS CARD}}"|"Story"|""|"yes"|""|""|""|"Switch"|"yes"|"#15"|"#21"|""|""|""|""|""|""|""|"Accepted"|""
"#310"|"Put FlexNet 11.10 into Switch project"|"Description:It should be possible to build Switch on 10.5 and 10.6 so Switch works find on Lion Notes:"|"Task"|""|"no"|""|""|"#94"|"Switch"|"yes"|"#15"|"#21"|""|""|""|""|""|""|""|""|"Done"
"#143"|"Spike - Show a message from installer on Mac"|"h2. Narrative


As a  I can  to Check how to show custom text message in installer UI on Mac depending on CLI check result.

h2. Related Stories


* #0


h2. Tasks


{{table query: SELECT Number, Name, Owner, 'Hours Remaining', 'Task Status' WHERE Type = Task and Story = THIS CARD}} 


h2. Defects


{{table query: SELECT Number, Name, Owner, 'Defect Status' WHERE Type = Defect and Story = THIS CARD}}"|"Story"|""|"yes"|""|""|""|"Switch"|"yes"|"#15"|"#21"|""|""|""|""|""|""|""|"Accepted"|""
"#288"|"Investigate ability to call CLI from installer, get result and show custom text message"|"Description: Notes:"|"Task"|""|"no"|""|""|"#143"|"Switch"|"yes"|"#15"|"#21"|""|""|""|""|""|""|""|""|"Done"
"#27"|"Start Switch trial and start module trial"|"h2. Narrative


As a a Switch administrator I can not activate a module trial as long as Switch is not licensed (trial or permanent) to 1) keep an overview on the basic feature set and the modular feature set and not get overloaded with all features right from the start 
2) not loose module trial time because i cannot use the features because Switch is not licensedDEV 5 + QA  2*Conversation:*
It is not possible to license the trial of a module if Switch (basic) itself is not licensed (either trial or permanent)
This automatically means that if Switch is launched for the first time and the license panel is brought up, i will be able to activate Switch trial (and no other module as trial buttons will be grayed out!) or to enter a license file (which can include keys for Switch and modules).
If i choose for trial, then the activation procedure is started to activate Switch build in trial key. After activation i don't need to restart.

Since Switch is licensed now (either trial or permanent), it is possible to start the trial (because the buttons become active now) of one or multiple modules but i need to go to the license panel manually.

*Acceptance criteria:*
Module trial buttons are grayed out if Switch itself is not in trial or permanent license state.

*notes for testing*


h2. Related Stories


* #0


h2. Tasks


{{table query: SELECT Number, Name, Owner, 'Hours Remaining', 'Task Status' WHERE Type = Task and Story = THIS CARD}} 


h2. Defects


{{table query: SELECT Number, Name, Owner, 'Defect Status' WHERE Type = Defect and Story = THIS CARD}}"|"Story"|""|"yes"|""|""|""|"Switch"|"yes"|"#15"|"#21"|""|""|""|""|""|""|""|"In Development"|""
"#306"|"Add grace key file and implement grace key logic"|"Description: Notes:"|"Task"|""|"no"|""|""|"#27"|"Switch"|"yes"|"#15"|"#21"|""|""|""|""|""|""|""|""|"Done"
"#308"|"QA - test trial logic"|"Description: Notes:"|"Task"|""|"no"|""|""|"#27"|"Switch"|"yes"|"#15"|"#21"|""|""|""|""|""|""|""|""|"New"
"#293"|"Call Activation wizard from License Panel"|"Description: Notes:"|"Task"|""|"no"|""|""|"#27"|"Switch"|"yes"|"#15"|"#21"|""|""|""|""|""|""|""|""|"Done"
"#295"|"Implement logic for Trial button"|"Description: Notes:"|"Task"|""|"no"|""|""|"#27"|"Switch"|"yes"|"#15"|"#21"|""|""|""|""|""|""|""|""|"Done"
"#294"|"Add new Trial keys into Switch Server"|"Description: Notes:"|"Task"|""|"no"|""|""|"#27"|"Switch"|"yes"|"#15"|"#21"|""|""|""|""|""|""|""|""|"Done"
"#63"|"QA Configurator module"|"h2. Narrative


As a  I can  to As a (prepress) manager on a tight budget I only want to pay for features I
actually use, i.e. Configurators, in order to get the most out of my
investment.

*Conversation*
The configurators should be licensed separately from Switch. Meaning that only
when I use a valid key, the configurators (i.e. elements in Configurator
section of the elements pane) become available.
The key can either be a permanent or trial key. Both keys have the same result,
however a trial key is time bombed so when it expires, functionality cannot be
used anymore. Same thing when you deactivate a key.

SwitchScripter (Configurator SDK) always puts the configuration module ID in the scripted plug-in. Configurators created with older version of SDK don't have such ID. They should however also be loaded correctly in Switch 11. 
For our own tools we'll put the ID in the tool manually. SwitchScritper should not overwrite ID's that were added manually.

*Acceptance criteria*
Make the Configurators behave like the Database connect tool in Switch 10
update1. Meaning that only when they are licensed (separately from
PowerSwitch), they can be used. Note that the Database module only includes 1
tool and the Configurator module includes all elements from the Configurator
section in the elements pane.

*notes for testing*
Test on one version on Mac and Windows
Test if custom category still works
Sanity check for each configurator. Test only one version of the 3rd party application per platform

h2. Related Stories


* #0


h2. Tasks


{{table query: SELECT Number, Name, Owner, 'Hours Remaining', 'Task Status' WHERE Type = Task and Story = THIS CARD}} 


h2. Defects


{{table query: SELECT Number, Name, Owner, 'Defect Status' WHERE Type = Defect and Story = THIS CARD}}"|"Story"|""|"yes"|""|""|""|"Switch"|"yes"|"#15"|"#21"|""|""|""|""|""|""|""|"Accepted"|""
"#285"|"QA - Test Custom category"|"Description:Test if custom category still works Notes:"|"Task"|""|"no"|""|""|"#63"|"Switch"|"yes"|"#15"|"#21"|""|""|""|""|""|""|""|""|"Done"
"#284"|"QA - Sanity Check of all configurator"|"Description:- Test on one version on Mac and Windows
- Sanity check for each configurator. Test only one version of the 3rd party application per platform Notes:"|"Task"|""|"no"|""|""|"#63"|"Switch"|"yes"|"#15"|"#21"|""|""|""|""|""|""|""|""|"Done"
"#25"|"New licens panel"|"h2. Narrative


As a a Switch administrator I can  see all modules their licensing state to activate trial or permanent licenses easilyQA 1 + DEV  20
For dev 5 points still remaining, for QA still 1 point*Conversation:*
Create a new licensing panel that is no longer part of the about panel.
(note: status indication icons are validation warning, client connect success and client connect error, all 12x12 pixels)

*Acceptance criteria:*
1) New GUI looks like the attachment (remarks, attachment is a prototype not a final presentation)
Meaning the container on the left shows modules (not licenses) and the container on the right shows all license info for the selected module or Switch basic. Note that there can be more then one license for a specific module (e.g. trial expired and permanent license) and especially that there can be more then one license for Switch (e.g. Switch 09 product key and maintenance key)
This panel support multi selections (e.g. to activate multiple trials at once) but for a multi select we do not have to display license info. I leave it up to the team to decide if they like to display details in this case but it's definitely not a must have)

2) This panel is shown at start-up whenever something goes in waring state:
Waring states are:
some part of Switch is in trial mode or using a time limited key (note that the remaining days should be part of the details section).
if Switch (basic) has no valid license anymore (i.e trial or permanent)
whenever maintenance will expire in the next 30 days
whenever a license is broken
3) This panel is shown via help - manage language
4) All license info is removed from the about panel


*Notes for testing*
- Test only functionality of this panel
- Test on Mac and Windows XP and Windows 7 (Aero)
- Test for different situations for keys: expired, trial, multiple keys for same product/module
- Test with enough keys to make sure that scroll bars and scaling works correctly.

h2. Related Stories


* #0


h2. Tasks


{{table query: SELECT Number, Name, Owner, 'Hours Remaining', 'Task Status' WHERE Type = Task and Story = THIS CARD}} 


h2. Defects


{{table query: SELECT Number, Name, Owner, 'Defect Status' WHERE Type = Defect and Story = THIS CARD}}"|"Story"|""|"yes"|""|""|""|"Switch"|"yes"|"#15"|"#21"|""|""|""|""|""|""|""|"In Development"|""
"#287"|"Implement Close button"|"Description:No OK and no cancel button on the licensing panel to return to switch when you licensed something on Mac OSX 10.6.8.

Please add a Close button. Notes:"|"Task"|""|"no"|""|""|"#25"|"Switch"|"yes"|"#15"|"#21"|""|""|""|""|""|""|""|""|"Done"
"#300"|"All time-limited keys should be marked with yellow warning icon in left and right panes"|"Description: Notes:"|"Task"|""|"no"|""|""|"#25"|"Switch"|"yes"|"#15"|"#21"|""|""|""|""|""|""|""|""|"Done"
"#316"|"Show Disabled key as 'Disabled'"|"Description: Notes:"|"Task"|""|"no"|""|""|"#25"|"Switch"|"yes"|"#15"|"#21"|""|""|""|""|""|""|""|""|"Done"
"#289"|"Offer Switch restart after changes in licensing"|"Description:
 Notes:"|"Task"|""|"no"|""|""|"#25"|"Switch"|"yes"|"#15"|"#21"|""|""|""|""|""|""|""|""|"Done"
"#265"|"QA - test new panel"|"Description:Notes for testing
- Test only functionality of this panel
- Test on Mac and Windows XP and Windows 7 (Aero)
- Test for different situations for keys: expired, trial, multiple keys for same product/module
- Test with enough keys to make sure that scroll bars and scaling works correctly. Notes:"|"Task"|""|"no"|""|""|"#25"|"Switch"|"yes"|"#15"|"#21"|""|""|""|""|""|""|""|""|"New"
"#302"|"Maintenance license is over "|"Description:In case maintenance license is over and Switch build date is not compatible with maintenance period - show Switch as Expired Notes:"|"Task"|""|"no"|""|""|"#25"|"Switch"|"yes"|"#15"|"#21"|""|""|""|""|""|""|""|""|"Done"
"#80"|"Maintenance expires"|"h2. Narrative


As a a Switch administrator I can choose not to renew my maintenance contract to save some money (on the short term and loose productivity in the long term :-))DEV 3 + QA 1Conversation:
From Switch 11 on we have a new maintenance policy that mainly comes down to: If you have a valid maintenance, then you can install any upgrade / update. If you don't have valid maintenance, you cannot install any upgrade / update anymore so you stay on a specific version forever.

We will add some warning in the Switch installer (as mentioned in another story) but a user might still install a version that is build after the contract expired. If a customer install such version, it can run in trial but after the trial expires Switch should not run anymore. Therefore we need a mechanism that checks the build date against the date in the maintenance feature of the key.
If build date is later then contract expiration date, then Switch behaves a being not licensed (e.g. cannot activate flows anymore, ...|)

Acceptance criteria:
Create a mechanism that checks the build date against the date in the maintenance feature.
Version with build date later then date in key cannot be used to activate flows.
Also warn via log messages that maintenance is going to expire within 30 days. If maintenance expired, log a message at every start-up.

Latest specification about the overall licensing mechanism can be found in S:\ENFOCUS-Team\Product-Management\Source Documents\11\SS - Switch (Server)\Switch Modules Licensingv4.doc. Chapter 6 explains the maintenance licensing mechanism

This story is only about Switch 11, we need to create a different story for Switch Proxy.

Notes for testing:
* Test with maintenance key that has end date that has already past and an end date with a date in the future.
* Test if if with only activating an old full, light or power 09 or 10 key, Switch 11 doesn't work until a valid maintenance key was entered
* Test only one one version of Mac and one version of Windows.

h2. Related Stories


* #0


h2. Tasks


{{table query: SELECT Number, Name, Owner, 'Hours Remaining', 'Task Status' WHERE Type = Task and Story = THIS CARD}} 


h2. Defects


{{table query: SELECT Number, Name, Owner, 'Defect Status' WHERE Type = Defect and Story = THIS CARD}}"|"Story"|""|"yes"|""|""|""|"Switch"|"yes"|"#15"|"#21"|""|""|""|""|""|""|""|"Accepted"|""
"#264"|"QA - test maintenance expiration on Windows"|"Description:Notes for testing:
Test with maintenance key that has end date that has already past and an end date with a date in the future.
Test if if with only activating an old full, light or power 09 or 10 key, Switch 11 doesn’t work until a valid maintenance key was entered
Test only one one version of Mac and one version of Windows. Notes:Tested with PowerSwitch 10 key an a valid and invalid maintenance key "|"Task"|""|"no"|""|""|"#80"|"Switch"|"yes"|"#15"|"#21"|""|""|""|""|""|""|""|""|"Done"
"#147"|"User preferences"|"h2. Narrative


As a a Switch Administrator I can run on Switch on Lion  to make use of this new OS and have no problems with Switch preferences anymoreDEV 8 + QA 8Make settings user specific so we can run Switch on Mac OSX 10.7 Lion

*acceptance criteria*
Each user has his own settings and flows. 
In case of upgrading, the user that starts Switch 11 for the first time should get the possibility to import all settings and flows from older Switch versions using the import wizard. The old settings and flows should be moved instead of copied. To go back to Switch 10, Switch 10 needs to be reinstalled, launched and settings and flows need to be copied manually by the user.

*Notes for testing*
- Test on Mac: test on Lion, Lion Server, Leopard or Snow Leopard
- Test on Windows: test on xp and windows 7, 2008 R2
- test with different users
- test running as regular application and running as service
- test upgrade
- test downgrade to Switch 10
- put following bugs on resolved fixed once everything is tested ok: Bug 6516 (Lion issue: Changes to preferences are not applied) and Bug 6057 (Every time Switch starts it asks to update my flows)


h2. Related Stories


* #0


h2. Tasks


{{table query: SELECT Number, Name, Owner, 'Hours Remaining', 'Task Status' WHERE Type = Task and Story = THIS CARD}} 


h2. Defects


{{table query: SELECT Number, Name, Owner, 'Defect Status' WHERE Type = Defect and Story = THIS CARD}}"|"Story"|""|"yes"|""|""|""|"Switch"|"yes"|"#15"|"#21"|""|""|""|""|""|""|""|"In Development"|""
"#303"|"QA - Test on XP and Windows 7"|"Description: Notes:"|"Task"|""|"no"|""|""|"#147"|"Switch"|"yes"|"#15"|"#21"|""|""|""|""|""|""|""|""|"Done"
"#298"|"Verify WatchDog service on Win"|"Description: Notes:"|"Task"|""|"no"|""|""|"#147"|"Switch"|"yes"|"#15"|"#21"|""|""|""|""|""|""|""|""|"Done"
"#296"|"Switch to use User's home"|"Description: Notes:"|"Task"|""|"no"|""|""|"#147"|"Switch"|"yes"|"#15"|"#21"|""|""|""|""|""|""|""|""|"Done"
"#313"|"QA - test according to the notes for testing"|"Description:See notes for testing in the user story description. Also test BGZ 6057, 6516. Notes:"|"Task"|""|"no"|""|""|"#147"|"Switch"|"yes"|"#15"|"#21"|""|""|""|""|""|""|""|""|"New"
"#301"|"QA - Test on Leopard or Snow Leopard"|"Description: Notes:"|"Task"|""|"no"|""|""|"#147"|"Switch"|"yes"|"#15"|"#21"|""|""|""|""|""|""|""|""|"New"
"#297"|"Change Upgrade Wizard"|"Description: Notes:"|"Task"|""|"no"|""|""|"#147"|"Switch"|"yes"|"#15"|"#21"|""|""|""|""|""|""|""|""|"Done"
"#304"|"QA - Test on Windows 2008/R2"|"Description: Notes:"|"Task"|""|"no"|""|""|"#147"|"Switch"|"yes"|"#15"|"#21"|""|""|""|""|""|""|""|""|"New"
"#314"|"QA - tes upgrade when some of files are locked"|"Description:On Win and if possible on Mac.

If some files in app data root cannot be moved (locked by some third-party application for example) then the Upgrade Wizard should move the files that are not locked and copy the files that are locked. At the end the list of locked files should be reported by Wizard. Notes:"|"Task"|""|"no"|""|""|"#147"|"Switch"|"yes"|"#15"|"#21"|""|""|""|""|""|""|""|""|"Done"
"#299"|"QA  - Test on Lion and Lion server"|"Description: Notes:"|"Task"|""|"no"|""|""|"#147"|"Switch"|"yes"|"#15"|"#21"|""|""|""|""|""|""|""|""|"New"
"#315"|"Support question BGZ 6575"|"Description:Bug 6575 - Looking for a way to get the name of a 'current' file inside a job folder

To be answered by 1.12.2011 Notes:"|"Task"|""|"no"|""|""|""|"Switch"|"yes"|"#15"|"#21"|""|""|""|""|""|""|""|""|"New"
"#317"|"Support question BGZ 5018"|"Description:Bug 5018 - AUTOMATOR - Can we automate an Automator workflow with a variable for output?

To be answered by 1.12.2011 Notes:"|"Task"|""|"no"|""|""|""|"Switch"|"yes"|"#15"|"#21"|""|""|""|""|""|""|""|""|"New"
"#213"|"Support issue with French InDesign"|"Description: Notes:"|"Task"|""|"no"|""|""|""|"Switch"|"yes"|"#15"|"#21"|""|""|""|""|""|""|""|""|"New"
"#311"|"Support question BGZ 6566"|"Description:Bug 6566 - Execute the built in Switch Javascripts outside Switch 

To be answered by 30.11.2011 Notes:"|"Task"|""|"no"|""|""|""|"Switch"|"yes"|"#15"|"#21"|""|""|""|""|""|""|""|""|"Done"
"#212"|"Support question BGZ 6479"|"Description:Bug 6479 - -Problems with ODBC connection Notes:"|"Task"|""|"no"|""|""|""|"Switch"|"yes"|"#15"|"#21"|""|""|""|""|""|""|""|""|"New"
"#273"|"Support question BGZ 5805"|"Description:Bug 5805 - When can this error by triggered: Error in line 1 of Script : Parse Erro expeciting `error' or `'_' or &gt;&gt;`';' Notes:"|"Task"|""|"no"|""|""|""|"Switch"|"yes"|"#15"|"#21"|""|""|""|""|""|""|""|""|"New"
"#305"|"BZ 6539 'variables are no longer displayed in tooltips since Switch 10update2'"|"Description: Notes:"|"Task"|""|"no"|""|""|""|"Switch"|"yes"|"#15"|"#21"|""|""|""|""|""|""|""|""|"Done"
"#211"|"Support question BGZ 6386"|"Description:Bug 6386 - Can we check the attached messages and crash logs? Notes:"|"Task"|""|"no"|""|""|""|"Switch"|"yes"|"#15"|"#21"|""|""|""|""|""|""|""|""|"New"
"#252"|"Support question BGZ 6513"|"Description:Bug 6513 - UNGROUP: Failed to parse the received command data: expected command size: 148286; expected data size:Вґ143275 Notes:"|"Task"|""|"no"|""|""|""|"Switch"|"yes"|"#15"|"#21"|""|""|""|""|""|""|""|""|"Done"
"#307"|"Support question BGZ 6560"|"Description:Bug 6560 - Microsoft Visual C++ Runtime Library. Runtime Error! Notes:"|"Task"|""|"no"|""|""|""|"Switch"|"yes"|"#15"|"#21"|""|""|""|""|""|""|""|""|"New"
"#312"|"Support question BGZ 6570"|"Description:Bug 6570 - Xslt transform doesn't maintain accents

To be answered by 30.11.2011 Notes:"|"Task"|""|"no"|""|""|""|"Switch"|"yes"|"#15"|"#21"|""|""|""|""|""|""|""|""|"Done"
"#22"|"Generated Sprint-22"|""|"Sprint"|""|"no"|""|""|""|""|"yes"|"#15"|""|""|""|""|""|""|"2011-12-04 23:00:00.0"|"2011-12-17 23:00:00.0"|""|""
"#23"|"Generated Sprint-23"|""|"Sprint"|""|"no"|""|""|""|""|"yes"|"#15"|""|""|""|""|""|""|"2011-12-18 23:00:00.0"|"2011-12-31 23:00:00.0"|""|""
"#24"|"Generated Sprint-24"|""|"Sprint"|""|"no"|""|""|""|""|"yes"|"#15"|""|""|""|""|""|""|"2012-01-01 23:00:00.0"|"2012-01-14 23:00:00.0"|""|""
"#25"|"Generated Sprint-25"|""|"Sprint"|""|"no"|""|""|""|""|"yes"|"#15"|""|""|""|""|""|""|"2012-01-15 23:00:00.0"|"2012-01-28 23:00:00.0"|""|""
"#156"|"Custom variables_1"|"h2. Narrative


As a a flow designer I can can save variables to reuse them and gain lots of time*Conversation:*
Make it possible to save variables in Switch so you can reuse them.
This could be a new item in the preferences 'Custom variables' where you can create new variables, delete them and edit them. When you choose new, you must give it a name, a description and a definition. That definition brings you to the well known variable pane that list the groups according to the modules you own.

It should also be possible to save or edit a variable on the fly. So without going to the preferences but when for instance when defining a variable on some property of a configurator.

Finally the variables should also be exportable to another Switch and it should be possible to lock the variables. That way it becomes an interesting feature for consultants and integrator who can create such a variable or a set of variables and sell them as read only to end users.

h2. Related Stories


* #0


h2. Tasks


{{table query: SELECT Number, Name, Owner, 'Hours Remaining', 'Task Status' WHERE Type = Task and Story = THIS CARD}} 


h2. Defects


{{table query: SELECT Number, Name, Owner, 'Defect Status' WHERE Type = Defect and Story = THIS CARD}}"|"Story"|""|"yes"|""|""|""|"Switch"|"yes"|""|""|""|""|""|""|""|""|""|"In Product Backlog"|""
"#153"|"Move FTP functionality into separate CLI_1"|"h2. Narrative


As a a Switch administrator I can run all FTP tasks in a separate process to have a more reliable Switch and better performing FTP traffic*Conversation:*
Artem: 'I think this is mentioned somewhere on wiki pages. Currently there is the FTP crashing issue which is very hard to reproduce and thus fix. Taras and QA spend a lot of their working time on it. Having FTPExecutors similar to ScriptExecutors would allow to substantially lower the severity of the problem. I remember we had blocker FTP crashing problem right before the Switch 10 release, so I predict that such difficult FTP issues may arise from time to time. Creating FTPExecutors may be quite a big piece of work, especially if to work on this keeping in mind other possible kinds of Executors (MailExecutor?) we may need in future. But the benefits could be valuable enough so it worth spending time on this.'

*Acceptance criteria:*
FTP runs in a separate process

h2. Related Stories


* #0


h2. Tasks


{{table query: SELECT Number, Name, Owner, 'Hours Remaining', 'Task Status' WHERE Type = Task and Story = THIS CARD}} 


h2. Defects


{{table query: SELECT Number, Name, Owner, 'Defect Status' WHERE Type = Defect and Story = THIS CARD}}"|"Story"|""|"yes"|""|""|""|"Switch"|"yes"|""|""|""|""|""|""|""|""|""|"In Product Backlog"|""
"#41"|"Shaker tests for Configurators category"|"h2. Narrative


As a  I can  to Only write tests for configurators that Enfocus is responsible for, e.g. Adobe configurators, word, ...

Todo:
- reorganize existing tests according to new structure. In the story notes you can find a part of a mail that was sent begin september 2011.
- add new tests for elements, properties and values that were not tested yetTo have a more agile way of working we really need to get Shaker up and running again. Switch is a complex product with a lot of features. This makes it a lot of work to test everything manually and because of the complexity it is also easy for developers to introduce new bugs. Automated testing and test driven development is the only way to lower the number of new bugs and to ensure stable releases. I am convinced that these automated tests will be a big help for us during the refactoring and other work that we will do in the future.

 

Automated testing is only useful if the test run constantly and we make sure that the tests keep passing. I already setup a test machine in Ghent to continuously run Shaker tests. The tests are performed on a virtual machine that is reset every time to a clean state. For now we only test on windows and we only:
- run tests from 'Shaker Tests/NoSetupRequired/FeatureTests' on the Switch 10.x continuous and nightly builds.
- run tests from 'Shaker Tests/NoSetupRequired/RegressionTests' on the Switch 10.x nightly builds during the night

 The coming weeks I will setup test machines on Mac and also run the other Shaker tests.

Currently we are moving to a new structure for our Shaker tests. There are five main categories of tests:
1. Processing: tests for configurators which require the installation of the 3rd party application for that configurator.
2. SetupRequired: Tests without any configurators that require changes to the system before they can be used. E.g. mapping network drives, installing ODBC drivers or changing host files to map the name of ftp servers to the right IP address. We should try to have as much tests as possible that don't require any setup but for some tests this might not be possible.
3. NoSetupRequired: tests that should always pass on any system without having to setup something first. The idea is that every developer should be able to run these tests on his own machine in case he changed something. The test should only fail if something got broken and not because you first have to setup something.
4. RelationshipTests: contain published flows, e.g. sample flows that are included with Switch
5. Stress tests: for testing the behavior of Switch under heavy load

The Processing, SetupRequired and NoSetupRequired tests are split up in FeatureTests and RegressionTests. The ultimate goal of the FeatureTests is to have full coverage on the functionality in Switch. The ultimate goal of the RegressionTests is to have a test for each bug that was logged in BugZilla.

We will move to a new structure for the feature tests: The folder structure should first mention the category that the element belongs to in the Switch UI, then the name of the element, then the name of the property. E.g. Shaker Tests/NoSetupRequired/FeatureTests/Elements/Basics/Connection/IncludeTheseFolders for the 'Include these folders' property of the Connection element. This test should test all possible values for the 'Include these files' property: All files, All Other files, .... 

In some cases it might be handy to make a separate test for each possible value of a property, but in most cases we can limit the number of shaker tests by creating one test for all possible values of each property. Please also try to avoid using spaces in folder and filenames as much as possible.

For the moment we are far behind on the number of tests for our test driven development, it is difficult to see what is already tested and some test are failing. Therefore I would like everyone to: 
- Fix all existing tests that are currently failing. From now on you will all get mails the moment that the tests start failing.
- Add a test for each property of each element according to the new folder structure for our test files. If you want to reuse existing tests, you can rename/move them according to the new folder structure by doing a rename/move operation in p4v. 

From then on we will make sure that all tests keep passing and require that new Shaker test are written for every new feature (where possible). I already want to thank you for the effort and I am sure it will be a great help in the future.

h2. Related Stories


* #0


h2. Tasks


{{table query: SELECT Number, Name, Owner, 'Hours Remaining', 'Task Status' WHERE Type = Task and Story = THIS CARD}} 


h2. Defects


{{table query: SELECT Number, Name, Owner, 'Defect Status' WHERE Type = Defect and Story = THIS CARD}}"|"Story"|""|"yes"|""|""|""|"Switch"|"yes"|""|""|""|""|""|""|""|""|""|"In Product Backlog"|""
"#54"|"bug 5382 job icon in SwitchClient"|"h2. Narrative


As a a SwitchClient user I can see either the main job in a jobfolder or if there's no main job, a job folder icon to have a better view on which job's need my attention.Bug 5382 - Betatester - When submitting multiple jobs into 1 job - icon not ok.

h2. Related Stories


* #0


h2. Tasks


{{table query: SELECT Number, Name, Owner, 'Hours Remaining', 'Task Status' WHERE Type = Task and Story = THIS CARD}} 


h2. Defects


{{table query: SELECT Number, Name, Owner, 'Defect Status' WHERE Type = Defect and Story = THIS CARD}}"|"Story"|""|"yes"|""|""|""|"Switch"|"yes"|""|""|""|""|""|""|""|""|""|"In Product Backlog"|""
"#96"|"Woodwing configurator improvements"|"h2. Narrative


As a  I can  to -  bz 6355 : woodwing download change metadata
- There was also a feature request logged somewhere concerning WW that we would handle together with bz 6355

h2. Related Stories


* #0


h2. Tasks


{{table query: SELECT Number, Name, Owner, 'Hours Remaining', 'Task Status' WHERE Type = Task and Story = THIS CARD}} 


h2. Defects


{{table query: SELECT Number, Name, Owner, 'Defect Status' WHERE Type = Defect and Story = THIS CARD}}"|"Story"|""|"yes"|""|""|""|"Switch"|"yes"|""|""|""|""|""|""|""|""|""|"In Product Backlog"|""
"#150"|"BETATESTER - 'reacting to database updates'"|"h2. Narrative


As a  I can  to details in bz6108



h2. Related Stories


* #0


h2. Tasks


{{table query: SELECT Number, Name, Owner, 'Hours Remaining', 'Task Status' WHERE Type = Task and Story = THIS CARD}} 


h2. Defects


{{table query: SELECT Number, Name, Owner, 'Defect Status' WHERE Type = Defect and Story = THIS CARD}}"|"Story"|""|"yes"|""|""|""|"Switch"|"yes"|""|""|""|""|""|""|""|""|""|"In Product Backlog"|""
"#35"|"New product, new artwork"|"h2. Narrative


As a an operator I can only see one product name 'Switch' in the artwork to not be confused about possible property sets, flavors and modulesDEV 1 + QA 1*Note: new icons are not included in this story, will be separate story

*Conversation*
update artwork

*Acceptance criteria*
about panel
splash screen

Splash and abouts for Switch, Client and Scripter.
Also for installers on win, there we use the same image as for the about panel. This is for Switch, Client, Scripter and for Proxy installers

*Notes for testing*
Test on one version on Mac and one version on Windows

h2. Related Stories


* #0


h2. Tasks


{{table query: SELECT Number, Name, Owner, 'Hours Remaining', 'Task Status' WHERE Type = Task and Story = THIS CARD}} 


h2. Defects


{{table query: SELECT Number, Name, Owner, 'Defect Status' WHERE Type = Defect and Story = THIS CARD}}"|"Story"|""|"yes"|""|""|""|"Switch"|"yes"|""|""|""|""|""|""|""|""|""|"In Product Backlog"|""
"#99"|"SwitchProxy Maintenance"|"h2. Narrative


As a  I can  to *Conversation:*
SwitchProxy has the same licensing policy as Switch for maintenance.

*Acceptance Criteria:*
If maintenance expires it's no longer possible to update/upgrade proxy
Maintenance date is checked by the installer.

h2. Related Stories


* #0


h2. Tasks


{{table query: SELECT Number, Name, Owner, 'Hours Remaining', 'Task Status' WHERE Type = Task and Story = THIS CARD}} 


h2. Defects


{{table query: SELECT Number, Name, Owner, 'Defect Status' WHERE Type = Defect and Story = THIS CARD}}"|"Story"|""|"yes"|""|""|""|"Switch"|"yes"|""|""|""|""|""|""|""|""|""|"In Product Backlog"|""
"#168"|"support officially VM_1"|"h2. Narrative


As a an operator I can use Switch on VM to manage software and systems more easily*Conversation / Acceptance criteria:*
Support Switch on VM

h2. Related Stories


* #0


h2. Tasks


{{table query: SELECT Number, Name, Owner, 'Hours Remaining', 'Task Status' WHERE Type = Task and Story = THIS CARD}} 


h2. Defects


{{table query: SELECT Number, Name, Owner, 'Defect Status' WHERE Type = Defect and Story = THIS CARD}}"|"Story"|""|"yes"|""|""|""|"Switch"|"yes"|""|""|""|""|""|""|""|""|""|"In Product Backlog"|""
"#154"|"userfriendly defining dependency_1"|"h2. Narrative


As a a flow desigener I can more easily define dependent metadata fields for SwitchClient to make flows faster as behavior is more straight forwardConversation:
When defining dependency in metadata fields user get confused how to define the 'show if parent equals' field.
We already have a mechanism where the property editor fore the default value gets automatically adjusted to the type of the field. a same mechanism where the 'show if parent equals' property editor is automatically. adjusted to the type of the parent field would be most convenient.

e.g. parent: No-yes list type, then the dependent field 'show if parent equals' field should also be a No-yes list.

Next to the automatically adjusted type, it would also be nice to have more property editors for this condition field (e.e.g single line text with var and script expression.

Acceptance criteria:
The 'show if parent equals' fields of a dependent field behaves like the 'default value' field. Where the editor of 'default value' matches the type of it's own field type, the 'show if parent equals' editor matches the type of not it's own but it's parent field.

h2. Related Stories


* #0


h2. Tasks


{{table query: SELECT Number, Name, Owner, 'Hours Remaining', 'Task Status' WHERE Type = Task and Story = THIS CARD}} 


h2. Defects


{{table query: SELECT Number, Name, Owner, 'Defect Status' WHERE Type = Defect and Story = THIS CARD}}"|"Story"|""|"yes"|""|""|""|"Switch"|"yes"|""|""|""|""|""|""|""|""|""|"In Product Backlog"|""
"#130"|"Include improved activation wizard"|"h2. Narrative


As a a Switch administrator I can can use the improved activation wizard to get fast access to Switch and start production asap Switch .*Conversation:*
Include the new activation wizard

*Acceptance criteria:*
The new feature to export license files is included on the Switch license panel
note: Wizard pops-up in installer instead of at first start-up of the application as mentioned in story 109

h2. Related Stories


* #0


h2. Tasks


{{table query: SELECT Number, Name, Owner, 'Hours Remaining', 'Task Status' WHERE Type = Task and Story = THIS CARD}} 


h2. Defects


{{table query: SELECT Number, Name, Owner, 'Defect Status' WHERE Type = Defect and Story = THIS CARD}}"|"Story"|""|"yes"|""|""|""|"Switch"|"yes"|""|""|""|""|""|""|""|""|""|"In Product Backlog"|""
"#162"|"Tests for File module Scripting API_1"|"h2. Narrative


As a  I can  to To make sure that everything works correctly we also need internal automated testing on the current scripting API. The ultimate goal is to have a test for each function in the scripting API.

For this story we need tests for Classes: File (and static functions), Dir (and static functions)




We will first have to think what's the best way to setup these tests.

h2. Related Stories


* #0


h2. Tasks


{{table query: SELECT Number, Name, Owner, 'Hours Remaining', 'Task Status' WHERE Type = Task and Story = THIS CARD}} 


h2. Defects


{{table query: SELECT Number, Name, Owner, 'Defect Status' WHERE Type = Defect and Story = THIS CARD}}"|"Story"|""|"yes"|""|""|""|"Switch"|"yes"|""|""|""|""|""|""|""|""|""|"In Product Backlog"|""
"#159"|"Tests for Metadata  module Scripting API_1"|"h2. Narrative


As a  I can  to To make sure that everything works correctly we also need internal automated testing on the current scripting API. The ultimate goal is to have a test for each function in the scripting API.

For this story we need tests for Classes: Codec, Dataset, DatasetOpaque, DatasetXML, DatasetJDF, DatasetXMP, DatasetEmbeddedXMP, ByteArray, FileStatisticsWe will first have to think what's the best way to setup these tests.

h2. Related Stories


* #0


h2. Tasks


{{table query: SELECT Number, Name, Owner, 'Hours Remaining', 'Task Status' WHERE Type = Task and Story = THIS CARD}} 


h2. Defects


{{table query: SELECT Number, Name, Owner, 'Defect Status' WHERE Type = Defect and Story = THIS CARD}}"|"Story"|""|"yes"|""|""|""|"Switch"|"yes"|""|""|""|""|""|""|""|""|""|"In Product Backlog"|""
"#125"|"Switch 11Shaker Needs"|"h2. Narrative


As a  I can  to DEV 13
In Switch 11 we don't have flavors anymore and we introduced the concept of modules instead. So we can remove the support for the need of Power or Full in Shaker and replace them with needs for a certain module.

h2. Related Stories


* #0


h2. Tasks


{{table query: SELECT Number, Name, Owner, 'Hours Remaining', 'Task Status' WHERE Type = Task and Story = THIS CARD}} 


h2. Defects


{{table query: SELECT Number, Name, Owner, 'Defect Status' WHERE Type = Defect and Story = THIS CARD}}"|"Story"|""|"yes"|""|""|""|"Switch"|"yes"|""|""|""|""|""|""|""|""|""|"In Product Backlog"|""
"#108"|"Woodwing Bug 6456 "|"h2. Narrative


As a  I can  to asset does not get downloaded when set to checked out without choosing a specific user

h2. Related Stories


* #0


h2. Tasks


{{table query: SELECT Number, Name, Owner, 'Hours Remaining', 'Task Status' WHERE Type = Task and Story = THIS CARD}} 


h2. Defects


{{table query: SELECT Number, Name, Owner, 'Defect Status' WHERE Type = Defect and Story = THIS CARD}}"|"Story"|""|"yes"|""|""|""|"Switch"|"yes"|""|""|""|""|""|""|""|""|""|"In Product Backlog"|""
"#160"|"Tests for basic module Scripting API_1"|"h2. Narrative


As a  I can  to To make sure that everything works correctly we also need internal automated testing on the current scripting API. The ultimate goal is to have a test for each function in the scripting API.

For this story we need tests for Classes: Switch, Environment, Connection, ConnectionList, Job, JobList, ClientConnection, Occurrence, OccurrenceListWe will first have to think what's the best way to setup these tests.

h2. Related Stories


* #0


h2. Tasks


{{table query: SELECT Number, Name, Owner, 'Hours Remaining', 'Task Status' WHERE Type = Task and Story = THIS CARD}} 


h2. Defects


{{table query: SELECT Number, Name, Owner, 'Defect Status' WHERE Type = Defect and Story = THIS CARD}}"|"Story"|""|"yes"|""|""|""|"Switch"|"yes"|""|""|""|""|""|""|""|""|""|"In Product Backlog"|""
"#120"|"Variables in PitStop Server"|"h2. Narrative


As a a PitStop Server user I can use metadata to drive preflight and actions to get faster, better and more intelligent workflows in PitStop Server Conversation:
It will be possible in PitStop Server 11 to use metadata coming from xml files to drive dynamic preflight.
The xml pickup mechanism and the variables from the metadata group will be used in PitStop Server.
This might require some refactoring.

Acceptance Criteria:
to be confirmed by PitStop team


h2. Related Stories


* #0


h2. Tasks


{{table query: SELECT Number, Name, Owner, 'Hours Remaining', 'Task Status' WHERE Type = Task and Story = THIS CARD}} 


h2. Defects


{{table query: SELECT Number, Name, Owner, 'Defect Status' WHERE Type = Defect and Story = THIS CARD}}"|"Story"|""|"yes"|""|""|""|"Switch"|"yes"|""|""|""|""|""|""|""|""|""|"In Product Backlog"|""
"#26"|"Check license in Switch installer"|"h2. Narrative


As a Switch administrator I can not run the installer of a new version (especially major release version) to find out that (after installing) i cannot use that new version because of the maintenance policy and have to revert my installation to a previous versionDEV 13 + QA 2*Conversation:*
Create a CLI that checks the license state (i.e. valid product feature AND valid MAINTENANCE feature) and reports it.
Use that CLI in the installer

*Acceptance criteria:*
In an early phase of the installation procedure i get a warning that this version cannot be installed because the date of the build i like to install is older than the end date of my maintenance contract. e.g. 'No valid maintenance key was found on your system. After installation you will not be able to use this version until a valid maintenance key was activated.'
DVW: After the user gets the warning he has the choice to continue the installation or not. If he has a valid maintenance key he can activate it after the installation. This story is only about Switch 11, we need to create a different story for Switch Proxy.

*Notes for testing*
* Test on Mac and windows. Test on one version of Mac. Test on different versions of windows because of problems with manifests for example. 
* Test clean install
* Test with Switch 11 key with expired end date
* Test with Switch 11 key with valid end date
* Test with Switch 11 key with expired end date + Switch 11 maintenance key with expired end date
* Test with Switch 11 key with expired end date + Switch 11 maintenance key valid end date
* Test one of light, full, power 09 and 10 without maintenance
* Test one of light, full, power 09 and 10 with maintenance that has expired


==============================================================================================
For development:
We would only show a warning if there was already a valid Power/Light/Full/Switch key was found for which the maintenance is expired. Customers that never have installed a Switch before will not get this warning and won’t get confused.
We need to create a custom command line tool for Switch to check the license on the system to find out if we should give a warning or not. The command line tool can be built together with Switch and contain the same build number as Switch. This tool will have approximately the same license checking as we will have in Switch it self and can use his own build number to check the licensing.
It looks like we won’t need the help for the licensing team for this and that our team can implement everything them self.
The warning message can be shown by the installer and we probably don’t have to create our own UI. Using the installer UI prevents problems like focus problems or the problem that the warning panel is hidden behind the installer window like we had with PackManager in the past (but were solved in the mean time). 

 Note about showing custom warning messages in the installer on mac:
'Software Distribution Legacy Guide'
http://www.filibeto.org/unix/macos/lib/dev/documentation/DeveloperTools/Conc
eptual/SoftwareDistribution4/SoftwareDistribution4.pdf
'String Files for the InstallationCheck Executable' on page 134.
==================================================================================================

h2. Related Stories


* #0


h2. Tasks


{{table query: SELECT Number, Name, Owner, 'Hours Remaining', 'Task Status' WHERE Type = Task and Story = THIS CARD}} 


h2. Defects


{{table query: SELECT Number, Name, Owner, 'Defect Status' WHERE Type = Defect and Story = THIS CARD}}"|"Story"|""|"yes"|""|""|""|"Switch"|"yes"|""|""|""|""|""|""|""|""|""|"In Product Backlog"|""
"#161"|"Tests for Process module Scripting API_1"|"h2. Narrative


As a  I can  to To make sure that everything works correctly we also need internal automated testing on the current scripting API. The ultimate goal is to have a test for each function in the scripting API.

For this story we need tests for Classes: Process (and static functions)
We will first have to think what's the best way to setup these tests. 

h2. Related Stories


* #0


h2. Tasks


{{table query: SELECT Number, Name, Owner, 'Hours Remaining', 'Task Status' WHERE Type = Task and Story = THIS CARD}} 


h2. Defects


{{table query: SELECT Number, Name, Owner, 'Defect Status' WHERE Type = Defect and Story = THIS CARD}}"|"Story"|""|"yes"|""|""|""|"Switch"|"yes"|""|""|""|""|""|""|""|""|""|"In Product Backlog"|""
"#8"|"Use license files instead of license keys"|"h2. Narrative


As a  I can  to As a Switch administrator I like to have an easy mechanism to license Switch
and one or multiple modules in order not to waste time and effort while
hassling with multiple keys.

*Conversation*
Use Esko’s licensing mechanism with licensing files (i.e. files that contain
key(s))
Check how files can be applied on the mechanism (drag and drop and/or browse to
a file). No need to reinvent the wheel so if only drag and drop or only browse
to works then that’s fine for me.

*Acceptance criteria*
Use such license file in an activation wizard that accepts them (either via a
drag and drop mechanism and/or via a browse to file feature). Use files
containing only 1 key and files containing multiple keys.

Also allow to still use the old keys from Switch 09 and 10

h2. Related Stories


* #0


h2. Tasks


{{table query: SELECT Number, Name, Owner, 'Hours Remaining', 'Task Status' WHERE Type = Task and Story = THIS CARD}} 


h2. Defects


{{table query: SELECT Number, Name, Owner, 'Defect Status' WHERE Type = Defect and Story = THIS CARD}}"|"Story"|""|"yes"|""|""|""|"Switch"|"yes"|""|""|""|""|""|""|""|""|""|"In Product Backlog"|""
"#90"|"FTP: Concurrent up and download"|"h2. Narrative


As a a Switch administrator I can fine tune the upload and download setting separately to get a more transparent FTP behaviorConversation:
BZ 6263

create a 2nd property for FTP in the Processing preferences.
Resulting in 
1) Concurrent upload transfers to the same site
2) Concurrent download transfers to the same site

Acceptance criteria:

h2. Related Stories


* #0


h2. Tasks


{{table query: SELECT Number, Name, Owner, 'Hours Remaining', 'Task Status' WHERE Type = Task and Story = THIS CARD}} 


h2. Defects


{{table query: SELECT Number, Name, Owner, 'Defect Status' WHERE Type = Defect and Story = THIS CARD}}"|"Story"|""|"yes"|""|""|""|"Switch"|"yes"|""|""|""|""|""|""|""|""|""|"In Product Backlog"|""
"#124"|"Check 3rd party libaries if they support all OS versions supported by Switch 11"|"h2. Narrative


As a  I can  to 

h2. Related Stories


* #0


h2. Tasks


{{table query: SELECT Number, Name, Owner, 'Hours Remaining', 'Task Status' WHERE Type = Task and Story = THIS CARD}} 


h2. Defects


{{table query: SELECT Number, Name, Owner, 'Defect Status' WHERE Type = Defect and Story = THIS CARD}}"|"Story"|""|"yes"|""|""|""|"Switch"|"yes"|""|""|""|""|""|""|""|""|""|"In Product Backlog"|""
"#122"|"Links to Switch 11 web pages"|"h2. Narrative


As a a Switch administrator I can find information in a few clicks to buy the application easily, check for updates or read documentationDEV 1/2 + QA 1/2*Conversation / Acceptance Criteria:*
new links for:
“Buy now” = 
“Online documentation” = 
“Check for updates” =

to be completed, links requested from marketing

h2. Related Stories


* #0


h2. Tasks


{{table query: SELECT Number, Name, Owner, 'Hours Remaining', 'Task Status' WHERE Type = Task and Story = THIS CARD}} 


h2. Defects


{{table query: SELECT Number, Name, Owner, 'Defect Status' WHERE Type = Defect and Story = THIS CARD}}"|"Story"|""|"yes"|""|""|""|"Switch"|"yes"|""|""|""|""|""|""|""|""|""|"In Product Backlog"|""
"#145"|"Check license in Proxy installer"|"h2. Narrative


As a Switch Proxy administrator I can not run the installer of a new version (especially major release version) to find out that (after installing) i cannot use that new version because of the maintenance policy and have to revert my installation to a previous version*Conversation:*
Create a CLI that checks the license state (i.e. valid product feature AND valid MAINTENANCE feature) and reports it.
Use that CLI in the installer

*Acceptance criteria:*
In an early phase of the installation procedure i get a warning that this version cannot be installed because the date of the build i like to install is older than the end date of my maintenance contract. e.g. 'No valid maintenance key was found on your system. After installation you will not be able to use this version until a valid maintenance key was activated.'
DVW: After the user gets the warning he has the choice to continue the installation or not. If he has a valid maintenance key he can activate it after the installation. This story is only about Switch Proxy 11, we have a different story for Switch.

*Notes for testing*
* Test on Mac and windows. Test on one version of Mac. Test on different versions of windows because of problems with manifests for example. 
* Test clean install
* Test with Switch Proxy 11 key with expired end date
* Test with Switch Proxy 11 key with valid end date
* Test with Switch Proxy 11 key with expired end date + Switch Proxy 11 maintenance key with expired end date
* Test with Switch Proxy 11 key with expired end date + Switch Proxy 11 maintenance key valid end date
* Test proxy 10 without maintenance
* Test proxy 10 with maintenance that has expired


==============================================================================================
For development: This story for Switch proxy corresponds with story 26 for Switch where you can find extra info
==================================================================================================

h2. Related Stories


* #0


h2. Tasks


{{table query: SELECT Number, Name, Owner, 'Hours Remaining', 'Task Status' WHERE Type = Task and Story = THIS CARD}} 


h2. Defects


{{table query: SELECT Number, Name, Owner, 'Defect Status' WHERE Type = Defect and Story = THIS CARD}}"|"Story"|""|"yes"|""|""|""|"Switch"|"yes"|""|""|""|""|""|""|""|""|""|"In Product Backlog"|""
"#91"|"Update Word configurator"|"h2. Narrative


As a an operator I can use latest Word version on win and mac to handle files in up to date Microsoft Word.conversation:
Support latest version of Microsoft Word. 

h2. Related Stories


* #0


h2. Tasks


{{table query: SELECT Number, Name, Owner, 'Hours Remaining', 'Task Status' WHERE Type = Task and Story = THIS CARD}} 


h2. Defects


{{table query: SELECT Number, Name, Owner, 'Defect Status' WHERE Type = Defect and Story = THIS CARD}}"|"Story"|""|"yes"|""|""|""|"Switch"|"yes"|""|""|""|""|""|""|""|""|""|"In Product Backlog"|""
"#103"|"Automatically setup local (S)FTP server for Shaker"|"h2. Narrative


As a  I can  to write a scripts for automatic configuration of an (S)FTP server to run on the system where Shaker is running: automatic installation of sever, creation of folder structure, creation of user.
Similar functionality is already available in unit tests for 'Network  
Support Layer'.


h2. Related Stories


* #0


h2. Tasks


{{table query: SELECT Number, Name, Owner, 'Hours Remaining', 'Task Status' WHERE Type = Task and Story = THIS CARD}} 


h2. Defects


{{table query: SELECT Number, Name, Owner, 'Defect Status' WHERE Type = Defect and Story = THIS CARD}}"|"Story"|""|"yes"|""|""|""|"Switch"|"yes"|""|""|""|""|""|""|""|""|""|"In Product Backlog"|""
"#109"|"Activate in installer / Clean up installer "|"h2. Narrative


As a a Switch administator I can get faster access to the application because the installation procedure and activation procedure are streamlined to get production up to speed asap or to test the software asap. So whenever you start Switch you will be up and ready for processing.*Conversation:*
To streamline installing and licensing we will include the activation mechanism in the installer.
So user first go through this procedure, then they launch the application (note, no auto start-up) and when they start Switch, they can immediately start using the application as it is already licensed.

h2. Related Stories


* #0


h2. Tasks


{{table query: SELECT Number, Name, Owner, 'Hours Remaining', 'Task Status' WHERE Type = Task and Story = THIS CARD}} 


h2. Defects


{{table query: SELECT Number, Name, Owner, 'Defect Status' WHERE Type = Defect and Story = THIS CARD}}"|"Story"|""|"yes"|""|""|""|"Switch"|"yes"|""|""|""|""|""|""|""|""|""|"In Product Backlog"|""
"#167"|"Tests for PDF Certification info module Scripting API_1"|"h2. Narrative


As a  I can  to To make sure that everything works correctly we also need internal automated testing on the current scripting API. The ultimate goal is to have a test for each function in the scripting API.

For this story we need tests forClasses: Certificate, CertificateList, User, UserList, Session, SessionList, DataMap, AltText, AltTextList
We will first have to think what's the best way to setup these tests.

h2. Related Stories


* #0


h2. Tasks


{{table query: SELECT Number, Name, Owner, 'Hours Remaining', 'Task Status' WHERE Type = Task and Story = THIS CARD}} 


h2. Defects


{{table query: SELECT Number, Name, Owner, 'Defect Status' WHERE Type = Defect and Story = THIS CARD}}"|"Story"|""|"yes"|""|""|""|"Switch"|"yes"|""|""|""|""|""|""|""|""|""|"In Product Backlog"|""
"#131"|"Automatic check for updated packages"|"h2. Narrative


As a  I can  to As a user I want to be notified automatically when new packages are available for my installed products to be able to immediately start using them if they are interesting for me. From montly report sent by the management:
Within the release cycle of the software there is not enough time to do the following:
• Update English documentation (Bhargavi)
• Review the English documentation and strings (QA)
• Update the reviewed English documentation (Bhargavi)
• Update the reviewed English strings (R&amp;D)
• Translate the documentation and strings (Yamagata)
• Review the translated documentation and strings (QA, PM and distributors)
• Update the reviewed documentation (Bhargavi)
• Update the reviewed strings (R&amp;D)
• Create installers (R&amp;D)
The aim for the PackManager and the language packs was to unlink the release of the
software with the releases of the documentation. This made it possible to do an update
on these packs later than the release.
We should harvest the efforts that were made in this area and focus on the quality of the
English documentation and strings for the release of the software and get these
translations out the door later on.

h2. Related Stories


* #0


h2. Tasks


{{table query: SELECT Number, Name, Owner, 'Hours Remaining', 'Task Status' WHERE Type = Task and Story = THIS CARD}} 


h2. Defects


{{table query: SELECT Number, Name, Owner, 'Defect Status' WHERE Type = Defect and Story = THIS CARD}}"|"Story"|""|"yes"|""|""|""|"Switch"|"yes"|""|""|""|""|""|""|""|""|""|"In Product Backlog"|""
"#157"|"Tab based property pane_1"|"h2. Narrative


As a a flow designer I can get a clear overview all properties of a tool to get a better view of all functionality that tools offers and to set up the tool more easilyConveration:
1) Add tabs to the property pane.
In Scripter this could result in some kind of property grouping feature. If no groups are made, then tools looks like it used to look. If groups are defined, the group name is shown as tab title.

2) second attempt to clean up the property pane GUI. Where for Switch 10 we tried to get some kind of form layout in a table we could now use a real form. This would also not affect the preferences table GUI.

Acceptance criteria:
property pane looks like image in attachment

h2. Related Stories


* #0


h2. Tasks


{{table query: SELECT Number, Name, Owner, 'Hours Remaining', 'Task Status' WHERE Type = Task and Story = THIS CARD}} 


h2. Defects


{{table query: SELECT Number, Name, Owner, 'Defect Status' WHERE Type = Defect and Story = THIS CARD}}"|"Story"|""|"yes"|""|""|""|"Switch"|"yes"|""|""|""|""|""|""|""|""|""|"In Product Backlog"|""
"#165"|"Show passed and failed Shaker tests with cruisecontrol_1"|"h2. Narrative


As a  I can  to As a Switch developer or QA tester I want to easily see which Shaker tests passed and failed so I know that all tests are still running every day without having to dig into the log file every time.Cruisecontrol has support to show test results by mail and on the dashboard. See http://cruisecontrol.sourceforge.net/main/configxml.html#merge

- Currently we only see the failing tests in the mails sent by cruisecontrol but it should also show which tests passed.
- Also the “test” tab on the cruisecontrol dashboard page shows “Test Suites (0)” for the moment.

This can probably be solved by making the format of the Shaker log files compatible with the junit format from Ant which is in xml. More info on the format can be found on http://mail-archives.apache.org/mod_mbox/ant-dev/200902.mbox/%3Cdffc72020902241548l4316d645w2e98caf5f0aac770@mail.gmail.com%3E

h2. Related Stories


* #0


h2. Tasks


{{table query: SELECT Number, Name, Owner, 'Hours Remaining', 'Task Status' WHERE Type = Task and Story = THIS CARD}} 


h2. Defects


{{table query: SELECT Number, Name, Owner, 'Defect Status' WHERE Type = Defect and Story = THIS CARD}}"|"Story"|""|"yes"|""|""|""|"Switch"|"yes"|""|""|""|""|""|""|""|""|""|"In Product Backlog"|""
"#97"|"Windows error reporting"|"h2. Narrative


As a  I can  to Generate dump information when having crashes on windows and and send this info to Enfocus. These dump files can be used afterwards to see what caused the crash and fix it without first having to reproduce the problem or do a remote login

h2. Related Stories


* #0


h2. Tasks


{{table query: SELECT Number, Name, Owner, 'Hours Remaining', 'Task Status' WHERE Type = Task and Story = THIS CARD}} 


h2. Defects


{{table query: SELECT Number, Name, Owner, 'Defect Status' WHERE Type = Defect and Story = THIS CARD}}"|"Story"|""|"yes"|""|""|""|"Switch"|"yes"|""|""|""|""|""|""|""|""|""|"In Product Backlog"|""
"#126"|"Uncompress / compress docx file"|"h2. Narrative


As a a flow designer I can use the uncompress  and compress tools on docx files to create flows for document processing marketThe change in scripting API is working as expected–addition of  “remove_existing_archive” parameter in compress function.
 
But uncompressing of a docx file still does not work.  I had reported this issue on Monday. My hunch is that the compression format employed in docx( Zip - Base 64 ) is not supported by scripting API.

h2. Related Stories


* #0


h2. Tasks


{{table query: SELECT Number, Name, Owner, 'Hours Remaining', 'Task Status' WHERE Type = Task and Story = THIS CARD}} 


h2. Defects


{{table query: SELECT Number, Name, Owner, 'Defect Status' WHERE Type = Defect and Story = THIS CARD}}"|"Story"|""|"yes"|""|""|""|"Switch"|"yes"|""|""|""|""|""|""|""|""|""|"In Product Backlog"|""
"#138"|"Proxy application licensing"|"h2. Narrative


As a a Switch administrator I can upgrade SwitchProxy  to have it working with Switch 11DEV 3 + QA 2SwithProxy licensing behaves like Switch licensing
There is also a product key and a maintenance key (or a 2 in one key)
So licensing and maintenance can expired. For both situations Proxy should behave as Switch.
This story does not include license checking in the installer, this part is in a separate story, see story 145

h2. Related Stories


* #0


h2. Tasks


{{table query: SELECT Number, Name, Owner, 'Hours Remaining', 'Task Status' WHERE Type = Task and Story = THIS CARD}} 


h2. Defects


{{table query: SELECT Number, Name, Owner, 'Defect Status' WHERE Type = Defect and Story = THIS CARD}}"|"Story"|""|"yes"|""|""|""|"Switch"|"yes"|""|""|""|""|""|""|""|""|""|"In Product Backlog"|""
"#53"|"Remove link to PackManager"|"h2. Narrative


As a an operator I can cannot longer manage configurators if the configurator module is not active to not be overloaded with features that are not useful.DEV 0 + QA 1*Acceptance Criteria:*
The help menu item 'Manage configurators ...' is not available until the configurator module is active.

*Notes for testing*
test on one version of Mac and windows with configurator module activated/deactivated

h2. Related Stories


* #0


h2. Tasks


{{table query: SELECT Number, Name, Owner, 'Hours Remaining', 'Task Status' WHERE Type = Task and Story = THIS CARD}} 


h2. Defects


{{table query: SELECT Number, Name, Owner, 'Defect Status' WHERE Type = Defect and Story = THIS CARD}}"|"Story"|""|"yes"|""|""|""|"Switch"|"yes"|""|""|""|""|""|""|""|""|""|"In Product Backlog"|""
"#141"|"My Story defect"|"h2. Narrative


As a  I can  to Description story defectNotes story defect

h2. Related Stories


* #0


h2. Tasks


{{table query: SELECT Number, Name, Owner, 'Hours Remaining', 'Task Status' WHERE Type = Task and Story = THIS CARD}} 


h2. Defects


{{table query: SELECT Number, Name, Owner, 'Defect Status' WHERE Type = Defect and Story = THIS CARD}}"|"Story"|""|"yes"|""|""|""|"Switch"|"yes"|""|""|""|""|""|""|""|""|""|"In Product Backlog"|""
"#127"|"Designer SOAP API security"|"h2. Narrative


As a  I can  to *Conversation:* (by Artem)
While investigating your another question I checked Designer SOAP API. This API is the interface that is provided by Server for Designer. According to my investigation it is unprotected. Now the only protection is using some private user name during the authentication. I think that this must be changed because the interface is really powerful and we should make it more secure.

As the first and quite effective solution I want to allow connections to Server only from 'localhost' or '127.0.0.1' IP. In this case only local application (Designer is always local) can use the API. Probably we also need something more advanced. I don't want to use SSL because this may influence the performance. I think that we could use some dynamic user name that would be generated for each request by Designer based on current datetime.

BTW, a customer can use a firewall to protect Server from unauthorized access via Designer SOAP API. The firewall should expose the Server port only to localhost connections. This is actually the same as the solution from above I want to implement.

h2. Related Stories


* #0


h2. Tasks


{{table query: SELECT Number, Name, Owner, 'Hours Remaining', 'Task Status' WHERE Type = Task and Story = THIS CARD}} 


h2. Defects


{{table query: SELECT Number, Name, Owner, 'Defect Status' WHERE Type = Defect and Story = THIS CARD}}"|"Story"|""|"yes"|""|""|""|"Switch"|"yes"|""|""|""|""|""|""|""|""|""|"In Product Backlog"|""
"#139"|"SwitchProxy"|"h2. Narrative


As a a Swtich administrator I can only use Proxy 11 with Switch 11 to be sure about product compatibilityDEV 1 + QA 2To use a proxy with Switch 11 you must install Proxy 11.
Proxy 10 should not be guaranteed compatible with Switch 11, but we do not block it in the code.

We do have to make sure that Client 10 and Client 11 can communicate with Switch 11 via Proxy 11

*Notes for testing*
Test on different platforms for Client/Switch/Proxy

h2. Related Stories


* #0


h2. Tasks


{{table query: SELECT Number, Name, Owner, 'Hours Remaining', 'Task Status' WHERE Type = Task and Story = THIS CARD}} 


h2. Defects


{{table query: SELECT Number, Name, Owner, 'Defect Status' WHERE Type = Defect and Story = THIS CARD}}"|"Story"|""|"yes"|""|""|""|"Switch"|"yes"|""|""|""|""|""|""|""|""|""|"In Product Backlog"|""
"#148"|"Flexera Licensing"|"h2. Narrative


As a a Switch administrator I can run Switch on Lion to make use of this new OS without having licensing and activation issuesProblem description available on https://wiki.esko.com/display/Enfocus/Switch+on+Lion

h2. Related Stories


* #0


h2. Tasks


{{table query: SELECT Number, Name, Owner, 'Hours Remaining', 'Task Status' WHERE Type = Task and Story = THIS CARD}} 


h2. Defects


{{table query: SELECT Number, Name, Owner, 'Defect Status' WHERE Type = Defect and Story = THIS CARD}}"|"Story"|""|"yes"|""|""|""|"Switch"|"yes"|""|""|""|""|""|""|""|""|""|"In Product Backlog"|""
"#119"|"Accept aditional Client licenses"|"h2. Narrative


As a Enfocus sales administrator I can more easily make Additional Client license keys to have less hassle with those keys as they will behave like every other module keyDEV 3 + QA 2Conversation:
Additional Client licenses used to have their own keys (product keys) and for each amount of additional licenses we had a separate features in those keys.
To make things easier we would like to have module keys (instead of product keys) and make the number of connections variable.

So a user would start with 5 connections coming from the Client module and can later on add 3 connections and later on 11 connections and later on ... connections. For every additional number we will provide a key.

Acceptance criteria.
I can add extra client licenses multiple times with those new keys.
Old keys are not accepted anymore.

*Notes for testing*
Test one version Mac and Windows and try to connect with multiple clients to check if number of clients is correctly limited. Check if old keys don't work anymore


h2. Related Stories


* #0


h2. Tasks


{{table query: SELECT Number, Name, Owner, 'Hours Remaining', 'Task Status' WHERE Type = Task and Story = THIS CARD}} 


h2. Defects


{{table query: SELECT Number, Name, Owner, 'Defect Status' WHERE Type = Defect and Story = THIS CARD}}"|"Story"|""|"yes"|""|""|""|"Switch"|"yes"|""|""|""|""|""|""|""|""|""|"In Product Backlog"|""
"#169"|"total file size of job queue_1"|"h2. Narrative


As a an administrator I can not only see the number of jobs waiting in a folder before a processor but i can also see the total file size of the queue to to spot bottlenecks more easily and improve flow performance*Conversation:*
The new Switch 10 job info panel only shows the number of jobs waiting before a specific element but number of jobs is not always a good benchmark for spotting bottle necks. The total size of all jobs says more.

Acceptance Criteria:
The job information pane has a 4th column showing the total file size.

h2. Related Stories


* #0


h2. Tasks


{{table query: SELECT Number, Name, Owner, 'Hours Remaining', 'Task Status' WHERE Type = Task and Story = THIS CARD}} 


h2. Defects


{{table query: SELECT Number, Name, Owner, 'Defect Status' WHERE Type = Defect and Story = THIS CARD}}"|"Story"|""|"yes"|""|""|""|"Switch"|"yes"|""|""|""|""|""|""|""|""|""|"In Product Backlog"|""
"#117"|"New product icons"|"h2. Narrative


As a  I can  to DEV 1 + QA 1*Conversation:*
Include new product icons for Switch, Scripter, Client, Proxy, Datacolletor and upgrade wizard.

*Notes for testing*
Test on Windows 7 and Snow Leopard. Test icons on different locations and different formats: test in dock, finder, start menu, explorer. Use differnt view settings in finder/explorer, large icons, small icons, ...

h2. Related Stories


* #0


h2. Tasks


{{table query: SELECT Number, Name, Owner, 'Hours Remaining', 'Task Status' WHERE Type = Task and Story = THIS CARD}} 


h2. Defects


{{table query: SELECT Number, Name, Owner, 'Defect Status' WHERE Type = Defect and Story = THIS CARD}}"|"Story"|""|"yes"|""|""|""|"Switch"|"yes"|""|""|""|""|""|""|""|""|""|"In Product Backlog"|""
"#75"|"Update readme"|"h2. Narrative


As a  I can  to 

h2. Related Stories


* #0


h2. Tasks


{{table query: SELECT Number, Name, Owner, 'Hours Remaining', 'Task Status' WHERE Type = Task and Story = THIS CARD}} 


h2. Defects


{{table query: SELECT Number, Name, Owner, 'Defect Status' WHERE Type = Defect and Story = THIS CARD}}"|"Story"|""|"yes"|""|""|""|"Switch"|"yes"|""|""|""|""|""|""|""|""|""|"In Product Backlog"|""
"#88"|"No access but still able to submit"|"h2. Narrative


As a  I can  to SwitchClient should only show submit point if the user that has logged on with Client is entitled to submit files as set up in the Switch User panel.I noticed that it is possible to select a submit point with both the SDK php sample and regular SwitchClient 10u1, while the user has no access right for that specific submit point. This is very confusing for SwitchClient users as the file seems to be submitted successfully but ends up nowhere.

Next to this quite some customers complained that is possible to submit files to inactive flows. Here we need an extra property on a submitpoint where a flow designer can set if it is allowed to submit files if the flow is inactive. If not allowed, the submitpoint should not be offered in SwithcClient

h2. Related Stories


* #0


h2. Tasks


{{table query: SELECT Number, Name, Owner, 'Hours Remaining', 'Task Status' WHERE Type = Task and Story = THIS CARD}} 


h2. Defects


{{table query: SELECT Number, Name, Owner, 'Defect Status' WHERE Type = Defect and Story = THIS CARD}}"|"Story"|""|"yes"|""|""|""|"Switch"|"yes"|""|""|""|""|""|""|""|""|""|"In Product Backlog"|""
"#106"|"Get rid of existing copying dialog in Designer"|"h2. Narrative


As a a flow designer I can only see the copy dialog when heavy file transfer is going on to not get confused by this dialog popping up when not really necessary.*Conversation:*
Artem:'There is the copying dialog in Designer that appears in case copying takes more than couple seconds. The dialog looks quite advanced, but frankly speaking I don't think all these progresses are really useful. It is too overloaded and I think customers rarely see it because Designer is not usually used when flows are in production. The problem is that the dialog copies files by transferring file content and not by using platform copy methods. This gives problems like lost attributes, missing resource forks and Finder info, incorrect file modification and creation date. The dialog comes from old Qt solution that is not supported anymore. Fixing it looks complicated so I would suggest just drop it away and use some very simple copy dialog with indefinite progress bar. This way we could use the same copying as used in Server and this should gradually allow solving the problems.'

*Acceptance criteria:*
Old dialog does not appear anymore. A new dialog (with indefinite progress bar) appears only when 'heavy file copying is going on. So it does not appear as quickly as the old dialog.

h2. Related Stories


* #0


h2. Tasks


{{table query: SELECT Number, Name, Owner, 'Hours Remaining', 'Task Status' WHERE Type = Task and Story = THIS CARD}} 


h2. Defects


{{table query: SELECT Number, Name, Owner, 'Defect Status' WHERE Type = Defect and Story = THIS CARD}}"|"Story"|""|"yes"|""|""|""|"Switch"|"yes"|""|""|""|""|""|""|""|""|""|"In Product Backlog"|""
"#112"|"hide duplicate values in dropdown list"|"h2. Narrative


As a a flow designer I can have to worry about double values in dropdown list if the list is populated with database content to get better behavior of the dropdown list in SwitchClient*Conversation:*
Mostly people want to populate dropdown list with only unique values from a database. Therefore another checkbox in the sql dialog for variables is required.
The checkbox should be checked by default and mention something like 'Hide duplicate values'
This will result in a SELECT DISTINCT statement by default. By turning this of the statement becomes just SELECT again.

*Acceptance criteria:*
when checked, statement is SELECT DISTINCT, resulting in only unique items in the dropdown lists in SwitchClient.

h2. Related Stories


* #0


h2. Tasks


{{table query: SELECT Number, Name, Owner, 'Hours Remaining', 'Task Status' WHERE Type = Task and Story = THIS CARD}} 


h2. Defects


{{table query: SELECT Number, Name, Owner, 'Defect Status' WHERE Type = Defect and Story = THIS CARD}}"|"Story"|""|"yes"|""|""|""|"Switch"|"yes"|""|""|""|""|""|""|""|""|""|"In Product Backlog"|""
"#158"|"Tests for Xml  module Scripting API_1"|"h2. Narrative


As a  I can  to To make sure that everything works correctly we also need internal automated testing on the current scripting API. The ultimate goal is to have a test for each function in the scripting API.

For this story we need tests for Classes:  Map, Node, NodeList, Element, Text, Comment, Attribute, AttributeList, Document



We will first have to think what's the best way to setup these tests.

h2. Related Stories


* #0


h2. Tasks


{{table query: SELECT Number, Name, Owner, 'Hours Remaining', 'Task Status' WHERE Type = Task and Story = THIS CARD}} 


h2. Defects


{{table query: SELECT Number, Name, Owner, 'Defect Status' WHERE Type = Defect and Story = THIS CARD}}"|"Story"|""|"yes"|""|""|""|"Switch"|"yes"|""|""|""|""|""|""|""|""|""|"In Product Backlog"|""
"#104"|"Use minimal requirements for FTP Shaker tests"|"h2. Narrative


As a  I can  to Kristof suggests not creating special tests for permissions. Instead he suggests doing all FTP tests using user accounts that only have the
minimal rights that should be needed to perform the tests.
This way we don't have to create/maintain extra tests + there will be
less tests which will require less time to run the tests also.


h2. Related Stories


* #0


h2. Tasks


{{table query: SELECT Number, Name, Owner, 'Hours Remaining', 'Task Status' WHERE Type = Task and Story = THIS CARD}} 


h2. Defects


{{table query: SELECT Number, Name, Owner, 'Defect Status' WHERE Type = Defect and Story = THIS CARD}}"|"Story"|""|"yes"|""|""|""|"Switch"|"yes"|""|""|""|""|""|""|""|""|""|"In Product Backlog"|""
"#68"|"QA New installer"|"h2. Narrative


As a an operator I can have an installer that does not refer to old switch flavors anymore but leaves old versions intact to end up with a clean installation of Switch 11 that does not affect previous versions*Conversation:*
Create a new installer for this new product.

*Acceptance criteria:*
The installer is re-branded. (except for the artwork everything refers to 'Switch)
Old versions are *not* longer removed as it used to be (i.e. on win uninstall, on Mac clean up if we can find it)
So a user that has an old LightSwitch 10 and FullSwitch 10 actually ends up with 3 versions (LightSwitch 10, FullSwitch 10 and Switch 11)

*Notes for testing*
Packs and configurators that are installed need to be checked
Test install and uninstall
Test on Mac and Windows: Lion and either Leopard or SnowLeopard. Windows 2008 R2 64bit and XP 32-bit. Will be tested on English systems.
Still message on windows about disabling UAC
To be tesed as Administrator and non-Admin account

h2. Related Stories


* #0


h2. Tasks


{{table query: SELECT Number, Name, Owner, 'Hours Remaining', 'Task Status' WHERE Type = Task and Story = THIS CARD}} 


h2. Defects


{{table query: SELECT Number, Name, Owner, 'Defect Status' WHERE Type = Defect and Story = THIS CARD}}"|"Story"|""|"yes"|""|""|""|"Switch"|"yes"|""|""|""|""|""|""|""|""|""|"In Product Backlog"|""
"#92"|"DOC Describe Modules conccept of Switch 11"|"h2. Narrative


As a  I can  to 

h2. Related Stories


* #0


h2. Tasks


{{table query: SELECT Number, Name, Owner, 'Hours Remaining', 'Task Status' WHERE Type = Task and Story = THIS CARD}} 


h2. Defects


{{table query: SELECT Number, Name, Owner, 'Defect Status' WHERE Type = Defect and Story = THIS CARD}}"|"Story"|""|"yes"|""|""|""|"Switch"|"yes"|""|""|""|""|""|""|""|""|""|"In Product Backlog"|""
"#152"|"QA - Publish WW configurator"|"h2. Narrative


As a  I can  to we have a version 3 of the WoodWing configurator that is ready to be published to Asknet and Crossroads

h2. Related Stories


* #0


h2. Tasks


{{table query: SELECT Number, Name, Owner, 'Hours Remaining', 'Task Status' WHERE Type = Task and Story = THIS CARD}} 


h2. Defects


{{table query: SELECT Number, Name, Owner, 'Defect Status' WHERE Type = Defect and Story = THIS CARD}}"|"Story"|""|"yes"|""|""|""|"Switch"|"yes"|""|""|""|""|""|""|""|""|""|"In Product Backlog"|""
"#40"|"Shaker tests for Communication category"|"h2. Narrative


As a  I can  to Todo:
- organize existing tests according to new structure. In the story notes you can find a part of a mail that was sent begin september 2011.
- add new tests for elements, properties and values that were not tested yet
- setup tests for different kinds of servers, e.g. for FTP, SFTP and email. We have added extra options to Shaker so that the same test can be done on different servers without having to duplicate and adjust the test each time.To have a more agile way of working we really need to get Shaker up and running again. Switch is a complex product with a lot of features. This makes it a lot of work to test everything manually and because of the complexity it is also easy for developers to introduce new bugs. Automated testing and test driven development is the only way to lower the number of new bugs and to ensure stable releases. I am convinced that these automated tests will be a big help for us during the refactoring and other work that we will do in the future.

 

Automated testing is only useful if the test run constantly and we make sure that the tests keep passing. I already setup a test machine in Ghent to continuously run Shaker tests. The tests are performed on a virtual machine that is reset every time to a clean state. For now we only test on windows and we only:
- run tests from 'Shaker Tests/NoSetupRequired/FeatureTests' on the Switch 10.x continuous and nightly builds.
- run tests from 'Shaker Tests/NoSetupRequired/RegressionTests' on the Switch 10.x nightly builds during the night

 The coming weeks I will setup test machines on Mac and also run the other Shaker tests.

Currently we are moving to a new structure for our Shaker tests. There are five main categories of tests:
1. Processing: tests for configurators which require the installation of the 3rd party application for that configurator.
2. SetupRequired: Tests without any configurators that require changes to the system before they can be used. E.g. mapping network drives, installing ODBC drivers or changing host files to map the name of ftp servers to the right IP address. We should try to have as much tests as possible that don't require any setup but for some tests this might not be possible.
3. NoSetupRequired: tests that should always pass on any system without having to setup something first. The idea is that every developer should be able to run these tests on his own machine in case he changed something. The test should only fail if something got broken and not because you first have to setup something.
4. RelationshipTests: contain published flows, e.g. sample flows that are included with Switch
5. Stress tests: for testing the behavior of Switch under heavy load

The Processing, SetupRequired and NoSetupRequired tests are split up in FeatureTests and RegressionTests. The ultimate goal of the FeatureTests is to have full coverage on the functionality in Switch. The ultimate goal of the RegressionTests is to have a test for each bug that was logged in BugZilla.

We will move to a new structure for the feature tests: The folder structure should first mention the category that the element belongs to in the Switch UI, then the name of the element, then the name of the property. E.g. Shaker Tests/NoSetupRequired/FeatureTests/Elements/Basics/Connection/IncludeTheseFolders for the 'Include these folders' property of the Connection element. This test should test all possible values for the 'Include these files' property: All files, All Other files, .... 

In some cases it might be handy to make a separate test for each possible value of a property, but in most cases we can limit the number of shaker tests by creating one test for all possible values of each property. Please also try to avoid using spaces in folder and filenames as much as possible.

For the moment we are far behind on the number of tests for our test driven development, it is difficult to see what is already tested and some test are failing. Therefore I would like everyone to: 
- Fix all existing tests that are currently failing. From now on you will all get mails the moment that the tests start failing.
- Add a test for each property of each element according to the new folder structure for our test files. If you want to reuse existing tests, you can rename/move them according to the new folder structure by doing a rename/move operation in p4v. 

From then on we will make sure that all tests keep passing and require that new Shaker test are written for every new feature (where possible). I already want to thank you for the effort and I am sure it will be a great help in the future.

h2. Related Stories


* #0


h2. Tasks


{{table query: SELECT Number, Name, Owner, 'Hours Remaining', 'Task Status' WHERE Type = Task and Story = THIS CARD}} 


h2. Defects


{{table query: SELECT Number, Name, Owner, 'Defect Status' WHERE Type = Defect and Story = THIS CARD}}"|"Story"|""|"yes"|""|""|""|"Switch"|"yes"|""|""|""|""|""|""|""|""|""|"In Product Backlog"|""
"#93"|"DOC Update documentation for Switch iso Power, Light, Full"|"h2. Narrative


As a  I can  to 

h2. Related Stories


* #0


h2. Tasks


{{table query: SELECT Number, Name, Owner, 'Hours Remaining', 'Task Status' WHERE Type = Task and Story = THIS CARD}} 


h2. Defects


{{table query: SELECT Number, Name, Owner, 'Defect Status' WHERE Type = Defect and Story = THIS CARD}}"|"Story"|""|"yes"|""|""|""|"Switch"|"yes"|""|""|""|""|""|""|""|""|""|"In Product Backlog"|""
"#149"|"Make it possible for a user to be part of more then one group"|"h2. Narrative


As a  I can  to At the moment Switch works with a 
one user-to-one group principle.

More realistic would be to add functionality where a user could be part of more groups.

betatester:
As a real life example: operator 1 from group catalogs usually works on wide format group too. Now, we must create 2 users and instruct operator 1 to disconnect from 1 group and login into the second one if he likes to do his job in both departments/groups.
At the same time, job manager usually take care of more than 1 group....
this was requested by Manuel Asorey &lt;masorey@eps.es&gt;

h2. Related Stories


* #0


h2. Tasks


{{table query: SELECT Number, Name, Owner, 'Hours Remaining', 'Task Status' WHERE Type = Task and Story = THIS CARD}} 


h2. Defects


{{table query: SELECT Number, Name, Owner, 'Defect Status' WHERE Type = Defect and Story = THIS CARD}}"|"Story"|""|"yes"|""|""|""|"Switch"|"yes"|""|""|""|""|""|""|""|""|""|"In Product Backlog"|""
"#163"|"Tests for Database module Scripting API_1"|"h2. Narrative


As a  I can  to To make sure that everything works correctly we also need internal automated testing on the current scripting API. The ultimate goal is to have a test for each function in the scripting API.

For this story we need tests for Classes: DataSource, Statement

We will first have to think what's the best way to setup these tests.

h2. Related Stories


* #0


h2. Tasks


{{table query: SELECT Number, Name, Owner, 'Hours Remaining', 'Task Status' WHERE Type = Task and Story = THIS CARD}} 


h2. Defects


{{table query: SELECT Number, Name, Owner, 'Defect Status' WHERE Type = Defect and Story = THIS CARD}}"|"Story"|""|"yes"|""|""|""|"Switch"|"yes"|""|""|""|""|""|""|""|""|""|"In Product Backlog"|""
"#164"|"Distribute SwitchClient settings_1"|"h2. Narrative


As a a Switch administrator I can can export and import SwitchClient settings to save time because it takes lot's of time to sync all SwitchClients so all operators use the same settings*Conversation / Acceptance Criteria:*
The custom filters and the customized table view settings can be exported and imported again in another SwitchClient.


h2. Related Stories


* #0


h2. Tasks


{{table query: SELECT Number, Name, Owner, 'Hours Remaining', 'Task Status' WHERE Type = Task and Story = THIS CARD}} 


h2. Defects


{{table query: SELECT Number, Name, Owner, 'Defect Status' WHERE Type = Defect and Story = THIS CARD}}"|"Story"|""|"yes"|""|""|""|"Switch"|"yes"|""|""|""|""|""|""|""|""|""|"In Product Backlog"|""
"#56"|"write Automated tests for Switch Client SDK"|"h2. Narrative


As a  I can  to We can use Automated testing framework for this

h2. Related Stories


* #0


h2. Tasks


{{table query: SELECT Number, Name, Owner, 'Hours Remaining', 'Task Status' WHERE Type = Task and Story = THIS CARD}} 


h2. Defects


{{table query: SELECT Number, Name, Owner, 'Defect Status' WHERE Type = Defect and Story = THIS CARD}}"|"Story"|""|"yes"|""|""|""|"Switch"|"yes"|""|""|""|""|""|""|""|""|""|"In Product Backlog"|""
"#166"|"Fix the assert message in Switch logs_1"|"h2. Narrative


As a  I can  to The message: 'Resource xml file with plugin injected properties could not be opened: RecycleBin'

This task is for Sergey

DEV 2 + QA 1*Notes for testing*
Asserts always comes up during startup on all machines. To be tested: startup with debug logging enabled and check the logs.

h2. Related Stories


* #0


h2. Tasks


{{table query: SELECT Number, Name, Owner, 'Hours Remaining', 'Task Status' WHERE Type = Task and Story = THIS CARD}} 


h2. Defects


{{table query: SELECT Number, Name, Owner, 'Defect Status' WHERE Type = Defect and Story = THIS CARD}}"|"Story"|""|"yes"|""|""|""|"Switch"|"yes"|""|""|""|""|""|""|""|""|""|"In Product Backlog"|""
"#155"|"Multi line text entry_1"|"h2. Narrative


As a a SwitchClient user I can type text in a multi line editor to be able to insert multi line comments in a user friendly way. Like making it possible to overview the text i just entered*Conversation:*
Now it is very user unfriendly to type a more elaborate text in SwitchClient metadata entry. A larger entry box would be most convenient so user can have like a 'Comment' entry on the metadata form.

*Acceptance Criteria:*
The data type has one more editor, being multi line text (other properties for defining this field on the server side are the same as for single-line text). resulting in a multi line entry box on the SwitchClient side. 
Number of lines to be defined (must be user friendly and still look good in the form). i guess 5 to 6 lines by default should do and then add vertical scroll bars.

h2. Related Stories


* #0


h2. Tasks


{{table query: SELECT Number, Name, Owner, 'Hours Remaining', 'Task Status' WHERE Type = Task and Story = THIS CARD}} 


h2. Defects


{{table query: SELECT Number, Name, Owner, 'Defect Status' WHERE Type = Defect and Story = THIS CARD}}"|"Story"|""|"yes"|""|""|""|"Switch"|"yes"|""|""|""|""|""|""|""|""|""|"In Product Backlog"|""